(()=>{var J=(e,o)=>()=>(o||e((o={exports:{}}).exports,o),o.exports);var P=J((he,G)=>{G.exports=window.Tablesort});var W=P();function X(e){return e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;")}function N(e,o){e=e||[];for(let t=0;t<e.length;t++)o(e[t])}function K(){return document.documentElement&&document.documentElement.scrollTop||document.body.scrollTop}function Y(){let e=document.getElementById("menu-toggle-mobile"),o=document.getElementById("menu-mobile");window.menuToggleMobileEventListener||(e.addEventListener("click",()=>{document.body.classList.toggle("blur"),e.classList.toggle("active"),o.classList.toggle("active")}),window.menuToggleMobileEventListener=!0),window._menuMobileOnClickMask=()=>{e.classList.remove("active"),o.classList.remove("active")},window.clickMaskEventSet.add(window._menuMobileOnClickMask)}function I(e){window.setTheme(e),window.saveTheme(e)}function Z(){Array.from(document.getElementsByClassName("theme-switch")).forEach(e=>{e.addEventListener("click",()=>{let o=document.body.getAttribute("theme");I(o==="dark"?"light":"dark");for(let t of window.switchThemeEventSet)t()})})}function Q(){Array.from(document.getElementsByClassName("color-theme-select")).forEach(e=>{let o=document.body.getAttribute("theme");for(let t=0;t<e.options.length;t++)if(e.options[t].value===o){e.selectedIndex=t;break}e.addEventListener("change",()=>{let t=e.value;window.localStorage&&localStorage.setItem("theme",t),t!=="auto"?I(t):window.matchMedia&&window.matchMedia("(prefers-color-scheme: dark)").matches?I("dark"):I("light");for(let n of window.switchThemeEventSet)n()})})}function U(){let e=window.config.search,o=window.matchMedia&&window.matchMedia("only screen and (max-width: 680px)").matches;if(!e||o&&window._searchMobileOnce||!o&&window._searchDesktopOnce)return;let t=e.maxResultLength?e.maxResultLength:10,n=e.snippetLength?e.snippetLength:50,s=e.highlightTag?e.highlightTag:"em",l=e.isCaseSensitive?e.isCaseSensitive:!1,a=e.minMatchCharLength?e.minMatchCharLength:1,d=e.findAllMatches?e.findAllMatches:!1,m=e.location?e.location:0,M=e.threshold?e.threshold:.3,_=e.distance?e.distance:100,b=e.ignoreLocation?e.ignoreLocation:!1,A=e.useExtendedSearch?e.useExtendedSearch:!1,B=e.ignoreFieldNorm?e.ignoreFieldNorm:!1,r=o?"mobile":"desktop",T=document.getElementById(`header-${r}`),i=document.getElementById(`search-input-${r}`),O=document.getElementById(`search-toggle-${r}`),x=document.getElementById(`search-loading-${r}`),f=document.getElementById(`search-clear-${r}`),q=window.config["autocomplete.min.js"],z=window.config["algoliasearch.min.js"],F=window.config["fuse.min.js"];o?(window._searchMobileOnce=!0,i.addEventListener("focus",()=>{C("autocomplete-script",q,()=>{j(),i.focus()}),window.config?.search?.type==="algolia"?C("algolia-script",z,null):C("fuse-script",F,null),document.body.classList.add("blur"),T.classList.add("open"),i.focus()}),document.getElementById("search-cancel-mobile").addEventListener("click",()=>{T.classList.remove("open"),document.body.classList.remove("blur"),document.getElementById("menu-toggle-mobile").classList.remove("active"),document.getElementById("menu-mobile").classList.remove("active"),x.style.display="none",f.style.display="none",window._searchMobile&&window._searchMobile.autocomplete.setVal("")}),f.addEventListener("click",()=>{f.style.display="none",window._searchMobile&&window._searchMobile.autocomplete.setVal("")},!1),window._searchMobileOnClickMask=()=>{T.classList.remove("open"),x.style.display="none",f.style.display="none",window._searchMobile&&window._searchMobile.autocomplete.setVal("")},window.clickMaskEventSet.add(window._searchMobileOnClickMask)):(window._searchDesktopOnce=!0,O.addEventListener("click",()=>{C("autocomplete-script",q,()=>{j(),i.focus()}),window.config?.search?.type==="algolia"?C("algolia-script",z,null):C("fuse-script",F,null),document.body.classList.add("blur"),T.classList.add("open"),i.focus()}),f.addEventListener("click",()=>{f.style.display="none",window._searchDesktop&&window._searchDesktop.autocomplete.setVal("")}),document.addEventListener("keydown",v=>{v.ctrlKey&&v.code==="KeyK"&&(v.preventDefault(),O.click())}),window._searchDesktopOnClickMask=()=>{T.classList.remove("open"),x.style.display="none",f.style.display="none",window._searchDesktop&&window._searchDesktop.autocomplete.setVal("")},window.clickMaskEventSet.add(window._searchDesktopOnClickMask)),i.addEventListener("input",()=>{i.value===""?f.style.display="none":f.style.display="inline"});let j=()=>{let v=autocomplete(`#search-input-${r}`,{hint:!1,autoselect:!0,dropdownMenuContainer:`#search-dropdown-${r}`,clearOnSelected:!1,cssClasses:{noPrefix:!0},debug:!0},{name:"search",source:(h,L)=>{x.style.display="inline",f.style.display="none";let g=c=>{x.style.display="none",f.style.display="inline",L(c)};if(e.type==="algolia")window._algoliaIndex=window._algoliaIndex||algoliasearch(e.algoliaAppID,e.algoliaSearchKey).initIndex(e.algoliaIndex),window._algoliaIndex.search(h,{offset:0,length:t*8,attributesToHighlight:["title"],attributesToRetrieve:["*"],attributesToSnippet:[`content:${n}`],highlightPreTag:`<${s}>`,highlightPostTag:`</${s}>`}).then(({hits:c})=>{let w={};c.forEach(({uri:p,date:R,_highlightResult:{title:H},_snippetResult:{content:S}})=>{w[p]&&w[p].context.length>S.value||(w[p]={uri:p,title:H.value,date:R,context:S.value})}),g(Object.values(w).slice(0,t))}).catch(c=>{console.error(c),g([])});else if(e.type==="fuse"){let c=()=>{let w={};return window._index.search(h).forEach(({item:p,refIndex:R,matches:H})=>{let S=p.title,k=p.content;H.forEach(({indices:E,value:ue,key:V})=>{if(V==="content"){let y=0;for(let u=0;u<E.length;u++){let $=k.substring(E[u][0]+y,E[u][1]+1+y),D=`<${s}>`+$+`</${s}>`;k=k.substring(0,E[u][0]+y)+D+k.substring(E[u][1]+1+y,k.length),y+=s.length*2+5}}else if(V==="title"){let y=0;for(let u=0;u<E.length;u++){let $=S.substring(E[u][0]+y,E[u][1]+1+y),D=`<${s}>`+$+`</${s}>`;S=S.substring(0,E[u][0]+y)+D+S.substring(E[u][1]+1+y,k.length),y+=s.length*2+5}}}),w[p.uri]={uri:p.uri,title:S,date:p.date,context:k}}),Object.values(w).slice(0,t)};window._index?g(c()):fetch(e.fuseIndexURL).then(w=>w.json()).then(w=>{let p={isCaseSensitive:l,findAllMatches:d,minMatchCharLength:a,location:m,threshold:M,distance:_,ignoreLocation:b,useExtendedSearch:A,ignoreFieldNorm:B,includeScore:!1,shouldSort:!0,includeMatches:!0,keys:["content","title"]};window._index=new Fuse(w,p),g(c())}).catch(w=>{console.error(w),g([])})}},templates:{suggestion:({title:h,uri:L,date:g,context:c})=>`<div><a href=${L}><span class="suggestion-title">${h}</span></a><span class="suggestion-date">${g}</span></div><div class="suggestion-context">${c}</div>`,empty:({query:h})=>`<div class="search-empty">${e.noResultsFound}: <span class="search-query">"${X(h)}"</span></div>`,footer:()=>{let{searchType:h,icon:L,href:g}=e.type==="algolia"?{searchType:"algolia",icon:'<svg class="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M229.3 182.6c-49.3 0-89.2 39.9-89.2 89.2 0 49.3 39.9 89.2 89.2 89.2s89.2-39.9 89.2-89.2c0-49.3-40-89.2-89.2-89.2zm62.7 56.6l-58.9 30.6c-1.8.9-3.8-.4-3.8-2.3V201c0-1.5 1.3-2.7 2.7-2.6 26.2 1 48.9 15.7 61.1 37.1.7 1.3.2 3-1.1 3.7zM389.1 32H58.9C26.4 32 0 58.4 0 90.9V421c0 32.6 26.4 59 58.9 59H389c32.6 0 58.9-26.4 58.9-58.9V90.9C448 58.4 421.6 32 389.1 32zm-202.6 84.7c0-10.8 8.7-19.5 19.5-19.5h45.3c10.8 0 19.5 8.7 19.5 19.5v15.4c0 1.8-1.7 3-3.3 2.5-12.3-3.4-25.1-5.1-38.1-5.1-13.5 0-26.7 1.8-39.4 5.5-1.7.5-3.4-.8-3.4-2.5v-15.8zm-84.4 37l9.2-9.2c7.6-7.6 19.9-7.6 27.5 0l7.7 7.7c1.1 1.1 1 3-.3 4-6.2 4.5-12.1 9.4-17.6 14.9-5.4 5.4-10.4 11.3-14.8 17.4-1 1.3-2.9 1.5-4 .3l-7.7-7.7c-7.6-7.5-7.6-19.8 0-27.4zm127.2 244.8c-70 0-126.6-56.7-126.6-126.6s56.7-126.6 126.6-126.6c70 0 126.6 56.6 126.6 126.6 0 69.8-56.7 126.6-126.6 126.6z"/></svg>',href:"https://www.algolia.com/"}:{searchType:"Fuse.js",icon:"",href:"https://fusejs.io/"};return`<div class="search-footer">Search by <a href="${g}" rel="noopener noreffer" target="_blank">${L} ${h}</a></div>`}}});v.on("autocomplete:selected",(h,L,g,c)=>{h.preventDefault()}),o?window._searchMobile=v:window._searchDesktop=v};function C(v,h,L){if(document.querySelector(`#${v}`)===null){let g=document.querySelector("head"),c=document.createElement("script");c.setAttribute("src",h),c.setAttribute("id",v),c.onload=L,g.appendChild(c)}}}function ee(){document.querySelectorAll(".details").forEach(e=>{let o=e.getElementsByClassName("details-summary")[0],t=o.nextElementSibling;e.classList.contains("open")&&(t.style.maxHeight=t.scrollHeight+"px"),o.addEventListener("click",()=>{e.classList.contains("open")?t.style.maxHeight="0px":t.style.maxHeight=t.scrollHeight+"px",e.classList.toggle("open")},!1),addEventListener("beforeprint",()=>{e.classList.contains("open")||o.click()})})}function te(){window.config.lightGallery&&lightGallery(document.getElementById("content"),window.config.lightGallery)}function oe(){N(document.querySelectorAll(".content table"),e=>{let o=document.createElement("div");o.className="table-wrapper",e.parentElement.replaceChild(o,e),o.appendChild(e),window.config?.table?.sort&&new W(e)})}function ne(){let e=document.getElementById("TableOfContents");if(e===null)return;let o=window.matchMedia&&window.matchMedia("only screen and (max-width: 1000px)").matches;if(document.getElementById("toc-static").getAttribute("kept")||o)window._tocOnScroll&&window.scrollEventSet.delete(window._tocOnScroll);else{let t=document.getElementById("toc-auto"),n=e.querySelectorAll("a:first-child"),s=e.getElementsByTagName("li"),l=document.getElementsByClassName("headerLink"),a=document.body.getAttribute("header-desktop")!=="normal",d=document.getElementById("header-desktop").offsetHeight,m=20+(a?d:0),M=t.offsetTop,_=M-m+(a?0:d);window._tocOnScroll=window._tocOnScroll||(()=>{let A=document.getElementById("post-footer").offsetTop-t.getBoundingClientRect().height,B=A-m+(a?0:d);if(window.newScrollTop<_?(t.style.position="absolute",t.style.top=`${M}px`):window.newScrollTop>B?(t.style.position="absolute",t.style.top=`${A}px`):(t.style.position="fixed",t.style.top=`${m}px`),n.length===0)return;let r=-1,T=m+window.newScrollTop;if(l[l.length-1].offsetTop<T)r=l.length-1;else for(let i=0;i<l.length-1;i++){let O=l[i].offsetTop,x=l[i+1].offsetTop;if(O<=T&&x>T){r=i;break}}if(Array.from(n).forEach(i=>i.classList.remove("active")),Array.from(s).forEach(i=>i.classList.remove("has-active")),r>=0&&r<n.length){n[r].classList.add("active");let i=n[r].parentElement;for(;i!==e;)i.classList.add("has-active"),i=i.parentElement.parentElement}}),window._tocOnScroll(),window.scrollEventSet.add(window._tocOnScroll)}}function se(){window.config.mapbox&&(mapboxgl.accessToken=window.config.mapbox.accessToken,mapboxgl.setRTLTextPlugin(window.config.mapbox.RTLTextPlugin),window._mapboxArr=window._mapboxArr||[],N(document.getElementsByClassName("mapbox"),e=>{let{lng:o,lat:t,zoom:n,lightStyle:s,darkStyle:l,marked:a,navigation:d,geolocate:m,scale:M,fullscreen:_}=window.config.data[e.id],b=new mapboxgl.Map({container:e,center:[o,t],zoom:n,minZoom:.2,style:window.isDark?l:s,attributionControl:!1});a&&new mapboxgl.Marker().setLngLat([o,t]).addTo(b),d&&b.addControl(new mapboxgl.NavigationControl,"bottom-right"),m&&b.addControl(new mapboxgl.GeolocateControl({positionOptions:{enableHighAccuracy:!0},showUserLocation:!0,trackUserLocation:!0}),"bottom-right"),M&&b.addControl(new mapboxgl.ScaleControl),_&&b.addControl(new mapboxgl.FullscreenControl),b.addControl(new MapboxLanguage),window._mapboxArr.push(b)}),window._mapboxOnSwitchTheme=()=>{N(window._mapboxArr,e=>{let o=e.getContainer(),{lightStyle:t,darkStyle:n}=window.config.data[o.id];e.setStyle(window.isDark?n:t),e.addControl(new MapboxLanguage)})},window.switchThemeEventSet.add(window._mapboxOnSwitchTheme))}function ie(){if(window.config.typeit){let e=window.config.typeit,o=e.speed?e.speed:100,t=e.cursorSpeed?e.cursorSpeed:1e3,n=e.cursorChar?e.cursorChar:"|";Object.values(e.data).forEach(s=>{let l=a=>{let d=s[a];if(!document.getElementById(d).hasAttribute("data-typeit-id")){let m=new TypeIt(`#${d}`,{strings:window.config.data[d],speed:o,lifeLike:!0,cursorSpeed:t,cursorChar:n,waitUntilVisible:!0,afterComplete:()=>{if(a===s.length-1){e.duration>=0&&window.setTimeout(()=>{m.destroy()},e.duration);return}m.destroy(),l(a+1)}}).go()}};l(0)})}}function le(){function e(n){let s=document.getElementsByTagName("meta");for(let l=0;l<s.length;l++)if(s[l].getAttribute("name")===n)return s[l]}let o=e("theme-color"),t={light:"#f8f8f8",dark:"#161b22"};window._metaThemeColorOnSwitchTheme=()=>{o.content=t[document.body.getAttribute("theme")]},window.switchThemeEventSet.add(window._metaThemeColorOnSwitchTheme),window._metaThemeColorOnSwitchTheme()}function ce(){let e=document.getElementById("back-to-top-button");function o(){window.newScrollTop=K(),window.newScrollTop>20?e.style.opacity="1":e.style.opacity="0";for(let t of window.scrollEventSet)t();window.oldScrollTop=window.newScrollTop}window.addEventListener("scroll",o,!1)}function ae(){window.addEventListener("resize",()=>{window._resizeTimeout||(window._resizeTimeout=window.setTimeout(()=>{window._resizeTimeout=null;for(let e of window.resizeEventSet)e();U()},100))},!1)}function re(){document.getElementById("mask").addEventListener("click",()=>{for(let e of window.clickMaskEventSet)e();document.body.classList.remove("blur")},!1)}function de(){document.querySelectorAll(".code-block").forEach(e=>{let o=e.querySelector("div.code-block-title-bar"),t=e.querySelector("code.chroma"),n=e.querySelector("button.copy-code-button"),s=n.querySelector("span.copy-icon"),l=n.querySelector("span.check-icon"),a=e.querySelector("button.wrap-code-button"),d=e.querySelector("button.line-number-button");t.style.maxHeight=t.scrollHeight+10+"px",o.addEventListener("click",()=>{e.classList.toggle("is-open"),e.classList.toggle("is-closed")}),n?.addEventListener("click",()=>{navigator.clipboard.writeText(t.textContent),s.style.display="none",l.style.display="block",setTimeout(()=>{s.style.display="block",l.style.display="none"},3e3)}),a?.addEventListener("click",()=>{t.style.maxHeight="fit-content",e.classList.toggle("is-wrap"),t.style.maxHeight=t.scrollHeight+10+"px"}),d.addEventListener("click",()=>{e.classList.toggle("show-line-numbers")}),addEventListener("beforeprint",m=>{e.classList.contains("is-closed")&&o.click(),e.classList.contains("is-wrap")||a.click()})})}function we(){window.isDark=document.body.getAttribute("theme")!=="light",window.newScrollTop=K(),window.oldScrollTop=window.newScrollTop,window.scrollEventSet=new Set,window.resizeEventSet=new Set,window.clickMaskEventSet=new Set,window.objectFitImages&&objectFitImages(),Y(),Z(),Q(),le(),U(),de(),ee(),te(),oe(),ie(),se(),ne(),ce(),ae(),re()}we();})();
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsibnMtaHVnbzovVXNlcnMvemVyb3kvRG9jdW1lbnRzL3plcm95MDQxMC5naXRodWIuaW8vdGhlbWVzL0RvSXQvYXNzZXRzL2pzL3NoaW1zL3RhYmxlc29ydC5qcyIsICI8c3RkaW4+Il0sCiAgInNvdXJjZXNDb250ZW50IjogWyJtb2R1bGUuZXhwb3J0cyA9IHdpbmRvdy5UYWJsZXNvcnQ7XG4iLCAiZXhwb3J0IHt9O1xuXG4vLyBUT0RPOiBhZGQgbW9yZSBnbG9iYWwgc3RhdGVzIHRvIHRoZSB3aW5kb3cgb2JqZWN0XG5kZWNsYXJlIGdsb2JhbCB7XG4gIGludGVyZmFjZSBXaW5kb3cge1xuICAgIGlzRGFyazogYm9vbGVhbjtcbiAgfVxufVxuXG4vKiBlc2xpbnQtZGlzYWJsZSBuby1uZXcgKi9cbi8qIGVzbGludC1kaXNhYmxlIG5vLXVuZGVmICovXG5jb25zdCBUYWJsZXNvcnQgPSByZXF1aXJlKFwidGFibGVzb3J0XCIpO1xuLy8gY29uc3QgYXV0b2NvbXBsZXRlID0gcmVxdWlyZSgnYXV0b2NvbXBsZXRlLmpzJylcblxuZnVuY3Rpb24gZXNjYXBlKHVuc2FmZSkge1xuICByZXR1cm4gdW5zYWZlXG4gICAgLnJlcGxhY2UoLyYvZywgXCImYW1wO1wiKVxuICAgIC5yZXBsYWNlKC88L2csIFwiJmx0O1wiKVxuICAgIC5yZXBsYWNlKC8+L2csIFwiJmd0O1wiKVxuICAgIC5yZXBsYWNlKC9cIi9nLCBcIiZxdW90O1wiKVxuICAgIC5yZXBsYWNlKC8nL2csIFwiJiMwMzk7XCIpO1xufVxuXG5mdW5jdGlvbiBmb3JFYWNoKGVsZW1lbnRzLCBoYW5kbGVyKSB7XG4gIGVsZW1lbnRzID0gZWxlbWVudHMgfHwgW107XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgZWxlbWVudHMubGVuZ3RoOyBpKyspIGhhbmRsZXIoZWxlbWVudHNbaV0pO1xufVxuXG5mdW5jdGlvbiBnZXRTY3JvbGxUb3AoKSB7XG4gIHJldHVybiAoXG4gICAgKGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCAmJiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsVG9wKSB8fFxuICAgIGRvY3VtZW50LmJvZHkuc2Nyb2xsVG9wXG4gICk7XG59XG5cbmZ1bmN0aW9uIGlzTW9iaWxlV2luZG93KCkge1xuICByZXR1cm4gd2luZG93Lm1hdGNoTWVkaWEoXCJvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNjgwcHgpXCIpLm1hdGNoZXM7XG59XG5cbi8qKlxuICogSW5pdGlhbGl6ZSB0aGUgbW9iaWxlIG1lbnUgYmFyLlxuICovXG5mdW5jdGlvbiBpbml0TWVudU1vYmlsZSgpIHtcbiAgY29uc3QgbWVudVRvZ2dsZU1vYmlsZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWVudS10b2dnbGUtbW9iaWxlXCIpO1xuICBjb25zdCBtZW51TW9iaWxlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtZW51LW1vYmlsZVwiKTtcbiAgLy8gSWYgbm8gZXZlbnQgbGlzdGVuZXIgaGFzIGJlZW4gcmVnaXN0ZXJlZCB5ZXQsIGFkZCBvbmUuXG4gIGlmICghd2luZG93Lm1lbnVUb2dnbGVNb2JpbGVFdmVudExpc3RlbmVyKSB7XG4gICAgbWVudVRvZ2dsZU1vYmlsZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QudG9nZ2xlKFwiYmx1clwiKTtcbiAgICAgIG1lbnVUb2dnbGVNb2JpbGUuY2xhc3NMaXN0LnRvZ2dsZShcImFjdGl2ZVwiKTtcbiAgICAgIG1lbnVNb2JpbGUuY2xhc3NMaXN0LnRvZ2dsZShcImFjdGl2ZVwiKTtcbiAgICB9KTtcbiAgICB3aW5kb3cubWVudVRvZ2dsZU1vYmlsZUV2ZW50TGlzdGVuZXIgPSB0cnVlO1xuICB9XG4gIC8vIFJlbW92ZSB0aGUgbWFzayB3aGVuIGNsaWNrIG9uIGl0LlxuICB3aW5kb3cuX21lbnVNb2JpbGVPbkNsaWNrTWFzayA9ICgpID0+IHtcbiAgICBtZW51VG9nZ2xlTW9iaWxlLmNsYXNzTGlzdC5yZW1vdmUoXCJhY3RpdmVcIik7XG4gICAgbWVudU1vYmlsZS5jbGFzc0xpc3QucmVtb3ZlKFwiYWN0aXZlXCIpO1xuICB9O1xuICB3aW5kb3cuY2xpY2tNYXNrRXZlbnRTZXQuYWRkKHdpbmRvdy5fbWVudU1vYmlsZU9uQ2xpY2tNYXNrKTtcbn1cblxuLyoqXG4gKiBTZXQgdGhlIGNvbG9yIHRoZW1lXG4gKiBAcGFyYW0ge3N0cmluZ30gdGhlbWVcbiAqL1xuZnVuY3Rpb24gc2V0Q29sb3JUaGVtZSh0aGVtZSkge1xuICB3aW5kb3cuc2V0VGhlbWUodGhlbWUpO1xuICB3aW5kb3cuc2F2ZVRoZW1lKHRoZW1lKTtcbn1cblxuLyoqXG4gKiBJbml0aWFsaXplIHRoZSBzd2l0Y2ggdGhlbWUgYnV0dG9uLlxuICovXG5mdW5jdGlvbiBpbml0U3dpdGNoVGhlbWUoKSB7XG4gIEFycmF5LmZyb20oZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcInRoZW1lLXN3aXRjaFwiKSkuZm9yRWFjaChcbiAgICAodGhlbWVTd2l0Y2gpID0+IHtcbiAgICAgIHRoZW1lU3dpdGNoLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICAgIGNvbnN0IGN1cnJlbnRUaGVtZSA9IGRvY3VtZW50LmJvZHkuZ2V0QXR0cmlidXRlKFwidGhlbWVcIik7XG4gICAgICAgIGlmIChjdXJyZW50VGhlbWUgPT09IFwiZGFya1wiKSB7XG4gICAgICAgICAgc2V0Q29sb3JUaGVtZShcImxpZ2h0XCIpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHNldENvbG9yVGhlbWUoXCJkYXJrXCIpO1xuICAgICAgICB9XG4gICAgICAgIGZvciAoY29uc3QgZXZlbnQgb2Ygd2luZG93LnN3aXRjaFRoZW1lRXZlbnRTZXQpIGV2ZW50KCk7XG4gICAgICB9KTtcbiAgICB9LFxuICApO1xufVxuXG4vKipcbiAqIEluaXRpYWxpemUgdGhlIHNlbGVjdCB0aGVtZSBidXR0b24uXG4gKi9cbmZ1bmN0aW9uIGluaXRTZWxlY3RUaGVtZSgpIHtcbiAgQXJyYXkuZnJvbShkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwiY29sb3ItdGhlbWUtc2VsZWN0XCIpKS5mb3JFYWNoKFxuICAgICh0aGVtZVNlbGVjdCkgPT4ge1xuICAgICAgLy8gR2V0IHRoZSBjdXJyZW50IHRoZW1lXG4gICAgICBjb25zdCBjdXJyZW50VGhlbWUgPSBkb2N1bWVudC5ib2R5LmdldEF0dHJpYnV0ZShcInRoZW1lXCIpO1xuICAgICAgLy8gU2V0IHRoZSBzZWxlY3RlZCBJbmRleFxuICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCB0aGVtZVNlbGVjdC5vcHRpb25zLmxlbmd0aDsgaisrKSB7XG4gICAgICAgIGNvbnN0IGkgPSB0aGVtZVNlbGVjdC5vcHRpb25zW2pdO1xuICAgICAgICBpZiAoaS52YWx1ZSA9PT0gY3VycmVudFRoZW1lKSB7XG4gICAgICAgICAgdGhlbWVTZWxlY3Quc2VsZWN0ZWRJbmRleCA9IGo7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgdGhlbWVTZWxlY3QuYWRkRXZlbnRMaXN0ZW5lcihcImNoYW5nZVwiLCAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHRoZW1lID0gdGhlbWVTZWxlY3QudmFsdWU7XG4gICAgICAgIHdpbmRvdy5sb2NhbFN0b3JhZ2UgJiYgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJ0aGVtZVwiLCB0aGVtZSk7XG4gICAgICAgIGlmICh0aGVtZSAhPT0gXCJhdXRvXCIpIHtcbiAgICAgICAgICBzZXRDb2xvclRoZW1lKHRoZW1lKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpZiAoXG4gICAgICAgICAgICB3aW5kb3cubWF0Y2hNZWRpYSAmJlxuICAgICAgICAgICAgd2luZG93Lm1hdGNoTWVkaWEoXCIocHJlZmVycy1jb2xvci1zY2hlbWU6IGRhcmspXCIpLm1hdGNoZXNcbiAgICAgICAgICApIHtcbiAgICAgICAgICAgIHNldENvbG9yVGhlbWUoXCJkYXJrXCIpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBzZXRDb2xvclRoZW1lKFwibGlnaHRcIik7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGZvciAoY29uc3QgZXZlbnQgb2Ygd2luZG93LnN3aXRjaFRoZW1lRXZlbnRTZXQpIGV2ZW50KCk7XG4gICAgICB9KTtcbiAgICB9LFxuICApO1xufVxuXG4vKipcbiAqIEluaXRpYWxpemUgdGhlIHNlYXJjaCBib3guXG4gKiBAcmV0dXJucyB7bnVsbH1cbiAqL1xuZnVuY3Rpb24gaW5pdFNlYXJjaCgpIHtcbiAgY29uc3Qgc2VhcmNoQ29uZmlnID0gd2luZG93LmNvbmZpZy5zZWFyY2g7XG4gIGNvbnN0IGlzTW9iaWxlID1cbiAgICB3aW5kb3cubWF0Y2hNZWRpYSAmJlxuICAgIHdpbmRvdy5tYXRjaE1lZGlhKFwib25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDY4MHB4KVwiKS5tYXRjaGVzO1xuICAvLyBJZiB0aGVyZSBpcyBubyBzZWFyY2ggY29uZmlnXG4gIC8vIE9yIHRoZSBzZWFyY2ggaGFzIGJlZW4gaW5pdGlhbGl6ZWQgYWxyZWFkeVxuICAvLyBSZXR1cm4gZGlyZWN0bHlcbiAgaWYgKFxuICAgICFzZWFyY2hDb25maWcgfHxcbiAgICAoaXNNb2JpbGUgJiYgd2luZG93Ll9zZWFyY2hNb2JpbGVPbmNlKSB8fFxuICAgICghaXNNb2JpbGUgJiYgd2luZG93Ll9zZWFyY2hEZXNrdG9wT25jZSlcbiAgKVxuICAgIHJldHVybjtcblxuICAvLyBJbml0aWFsaXplIGRlZmF1bHQgc2VhcmNoIGNvbmZpZ1xuICBjb25zdCBtYXhSZXN1bHRMZW5ndGggPSBzZWFyY2hDb25maWcubWF4UmVzdWx0TGVuZ3RoXG4gICAgPyBzZWFyY2hDb25maWcubWF4UmVzdWx0TGVuZ3RoXG4gICAgOiAxMDtcbiAgY29uc3Qgc25pcHBldExlbmd0aCA9IHNlYXJjaENvbmZpZy5zbmlwcGV0TGVuZ3RoXG4gICAgPyBzZWFyY2hDb25maWcuc25pcHBldExlbmd0aFxuICAgIDogNTA7XG4gIGNvbnN0IGhpZ2hsaWdodFRhZyA9IHNlYXJjaENvbmZpZy5oaWdobGlnaHRUYWdcbiAgICA/IHNlYXJjaENvbmZpZy5oaWdobGlnaHRUYWdcbiAgICA6IFwiZW1cIjtcbiAgY29uc3QgaXNDYXNlU2Vuc2l0aXZlID0gc2VhcmNoQ29uZmlnLmlzQ2FzZVNlbnNpdGl2ZVxuICAgID8gc2VhcmNoQ29uZmlnLmlzQ2FzZVNlbnNpdGl2ZVxuICAgIDogZmFsc2U7XG4gIGNvbnN0IG1pbk1hdGNoQ2hhckxlbmd0aCA9IHNlYXJjaENvbmZpZy5taW5NYXRjaENoYXJMZW5ndGhcbiAgICA/IHNlYXJjaENvbmZpZy5taW5NYXRjaENoYXJMZW5ndGhcbiAgICA6IDE7XG4gIGNvbnN0IGZpbmRBbGxNYXRjaGVzID0gc2VhcmNoQ29uZmlnLmZpbmRBbGxNYXRjaGVzXG4gICAgPyBzZWFyY2hDb25maWcuZmluZEFsbE1hdGNoZXNcbiAgICA6IGZhbHNlO1xuICBjb25zdCBsb2NhdGlvbiA9IHNlYXJjaENvbmZpZy5sb2NhdGlvbiA/IHNlYXJjaENvbmZpZy5sb2NhdGlvbiA6IDA7XG4gIGNvbnN0IHRocmVzaG9sZCA9IHNlYXJjaENvbmZpZy50aHJlc2hvbGQgPyBzZWFyY2hDb25maWcudGhyZXNob2xkIDogMC4zO1xuICBjb25zdCBkaXN0YW5jZSA9IHNlYXJjaENvbmZpZy5kaXN0YW5jZSA/IHNlYXJjaENvbmZpZy5kaXN0YW5jZSA6IDEwMDtcbiAgY29uc3QgaWdub3JlTG9jYXRpb24gPSBzZWFyY2hDb25maWcuaWdub3JlTG9jYXRpb25cbiAgICA/IHNlYXJjaENvbmZpZy5pZ25vcmVMb2NhdGlvblxuICAgIDogZmFsc2U7XG4gIGNvbnN0IHVzZUV4dGVuZGVkU2VhcmNoID0gc2VhcmNoQ29uZmlnLnVzZUV4dGVuZGVkU2VhcmNoXG4gICAgPyBzZWFyY2hDb25maWcudXNlRXh0ZW5kZWRTZWFyY2hcbiAgICA6IGZhbHNlO1xuICBjb25zdCBpZ25vcmVGaWVsZE5vcm0gPSBzZWFyY2hDb25maWcuaWdub3JlRmllbGROb3JtXG4gICAgPyBzZWFyY2hDb25maWcuaWdub3JlRmllbGROb3JtXG4gICAgOiBmYWxzZTtcbiAgY29uc3Qgc3VmZml4ID0gaXNNb2JpbGUgPyBcIm1vYmlsZVwiIDogXCJkZXNrdG9wXCI7XG4gIGNvbnN0IGhlYWRlciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGBoZWFkZXItJHtzdWZmaXh9YCk7XG4gIGNvbnN0IHNlYXJjaElucHV0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoYHNlYXJjaC1pbnB1dC0ke3N1ZmZpeH1gKTtcbiAgY29uc3Qgc2VhcmNoVG9nZ2xlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoYHNlYXJjaC10b2dnbGUtJHtzdWZmaXh9YCk7XG4gIGNvbnN0IHNlYXJjaExvYWRpbmcgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChgc2VhcmNoLWxvYWRpbmctJHtzdWZmaXh9YCk7XG4gIGNvbnN0IHNlYXJjaENsZWFyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoYHNlYXJjaC1jbGVhci0ke3N1ZmZpeH1gKTtcbiAgY29uc3QgYXV0b2NvbXBsZXRlSnMgPSB3aW5kb3cuY29uZmlnW1wiYXV0b2NvbXBsZXRlLm1pbi5qc1wiXTtcbiAgY29uc3QgYWxnb2xpYUpzID0gd2luZG93LmNvbmZpZ1tcImFsZ29saWFzZWFyY2gubWluLmpzXCJdO1xuICBjb25zdCBmdXNlSnMgPSB3aW5kb3cuY29uZmlnW1wiZnVzZS5taW4uanNcIl07XG4gIGlmIChpc01vYmlsZSkge1xuICAgIHdpbmRvdy5fc2VhcmNoTW9iaWxlT25jZSA9IHRydWU7XG4gICAgLy8gVHVybiBvbiB0aGUgbWFzayB3aGVuIGNsaWNraW5nIG9uIHRoZSBzZWFyY2ggYnV0dG9uXG4gICAgc2VhcmNoSW5wdXQuYWRkRXZlbnRMaXN0ZW5lcihcImZvY3VzXCIsICgpID0+IHtcbiAgICAgIGxvYWRTY3JpcHQoXCJhdXRvY29tcGxldGUtc2NyaXB0XCIsIGF1dG9jb21wbGV0ZUpzLCAoKSA9PiB7XG4gICAgICAgIGluaXRBdXRvc2VhcmNoKCk7XG4gICAgICAgIHNlYXJjaElucHV0LmZvY3VzKCk7XG4gICAgICB9KTtcbiAgICAgIGlmICh3aW5kb3cuY29uZmlnPy5zZWFyY2g/LnR5cGUgPT09IFwiYWxnb2xpYVwiKSB7XG4gICAgICAgIGxvYWRTY3JpcHQoXCJhbGdvbGlhLXNjcmlwdFwiLCBhbGdvbGlhSnMsIG51bGwpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbG9hZFNjcmlwdChcImZ1c2Utc2NyaXB0XCIsIGZ1c2VKcywgbnVsbCk7XG4gICAgICB9XG4gICAgICBkb2N1bWVudC5ib2R5LmNsYXNzTGlzdC5hZGQoXCJibHVyXCIpO1xuICAgICAgaGVhZGVyLmNsYXNzTGlzdC5hZGQoXCJvcGVuXCIpO1xuICAgICAgc2VhcmNoSW5wdXQuZm9jdXMoKTtcbiAgICB9KTtcbiAgICAvLyBUdXJuIG9mZiB0aGUgZXZlcnl0aGluZyB3aGVuIGNsaWNraW5nIG9uIHRoZSBjYW5jZWwgYnV0dG9uXG4gICAgZG9jdW1lbnRcbiAgICAgIC5nZXRFbGVtZW50QnlJZChcInNlYXJjaC1jYW5jZWwtbW9iaWxlXCIpXG4gICAgICAuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgaGVhZGVyLmNsYXNzTGlzdC5yZW1vdmUoXCJvcGVuXCIpO1xuICAgICAgICBkb2N1bWVudC5ib2R5LmNsYXNzTGlzdC5yZW1vdmUoXCJibHVyXCIpO1xuICAgICAgICBkb2N1bWVudFxuICAgICAgICAgIC5nZXRFbGVtZW50QnlJZChcIm1lbnUtdG9nZ2xlLW1vYmlsZVwiKVxuICAgICAgICAgIC5jbGFzc0xpc3QucmVtb3ZlKFwiYWN0aXZlXCIpO1xuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1lbnUtbW9iaWxlXCIpLmNsYXNzTGlzdC5yZW1vdmUoXCJhY3RpdmVcIik7XG4gICAgICAgIHNlYXJjaExvYWRpbmcuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgICAgICBzZWFyY2hDbGVhci5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgICAgIHdpbmRvdy5fc2VhcmNoTW9iaWxlICYmIHdpbmRvdy5fc2VhcmNoTW9iaWxlLmF1dG9jb21wbGV0ZS5zZXRWYWwoXCJcIik7XG4gICAgICB9KTtcbiAgICAvLyBDbGVhciB0aGUgc2VhcmNoIGJveCB3aGVuIGNsaWNraW5nIG9uIHRoZSBjbGVhciBidXR0b25cbiAgICBzZWFyY2hDbGVhci5hZGRFdmVudExpc3RlbmVyKFxuICAgICAgXCJjbGlja1wiLFxuICAgICAgKCkgPT4ge1xuICAgICAgICBzZWFyY2hDbGVhci5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgICAgIHdpbmRvdy5fc2VhcmNoTW9iaWxlICYmIHdpbmRvdy5fc2VhcmNoTW9iaWxlLmF1dG9jb21wbGV0ZS5zZXRWYWwoXCJcIik7XG4gICAgICB9LFxuICAgICAgZmFsc2UsXG4gICAgKTtcbiAgICAvLyBSZW1vdmUgdGhlIG1hc2sgd2hlbiBjbGljayBvbiBpdFxuICAgIHdpbmRvdy5fc2VhcmNoTW9iaWxlT25DbGlja01hc2sgPSAoKSA9PiB7XG4gICAgICBoZWFkZXIuY2xhc3NMaXN0LnJlbW92ZShcIm9wZW5cIik7XG4gICAgICBzZWFyY2hMb2FkaW5nLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICAgIHNlYXJjaENsZWFyLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICAgIHdpbmRvdy5fc2VhcmNoTW9iaWxlICYmIHdpbmRvdy5fc2VhcmNoTW9iaWxlLmF1dG9jb21wbGV0ZS5zZXRWYWwoXCJcIik7XG4gICAgfTtcbiAgICB3aW5kb3cuY2xpY2tNYXNrRXZlbnRTZXQuYWRkKHdpbmRvdy5fc2VhcmNoTW9iaWxlT25DbGlja01hc2spO1xuICB9IGVsc2Uge1xuICAgIHdpbmRvdy5fc2VhcmNoRGVza3RvcE9uY2UgPSB0cnVlO1xuICAgIC8vIFR1cm4gb24gdGhlIG1hc2sgd2hlbiBjbGlja2luZyBvbiB0aGUgc2VhcmNoIGJ1dHRvblxuICAgIHNlYXJjaFRvZ2dsZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgbG9hZFNjcmlwdChcImF1dG9jb21wbGV0ZS1zY3JpcHRcIiwgYXV0b2NvbXBsZXRlSnMsICgpID0+IHtcbiAgICAgICAgaW5pdEF1dG9zZWFyY2goKTtcbiAgICAgICAgc2VhcmNoSW5wdXQuZm9jdXMoKTtcbiAgICAgIH0pO1xuICAgICAgaWYgKHdpbmRvdy5jb25maWc/LnNlYXJjaD8udHlwZSA9PT0gXCJhbGdvbGlhXCIpIHtcbiAgICAgICAgbG9hZFNjcmlwdChcImFsZ29saWEtc2NyaXB0XCIsIGFsZ29saWFKcywgbnVsbCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBsb2FkU2NyaXB0KFwiZnVzZS1zY3JpcHRcIiwgZnVzZUpzLCBudWxsKTtcbiAgICAgIH1cbiAgICAgIGRvY3VtZW50LmJvZHkuY2xhc3NMaXN0LmFkZChcImJsdXJcIik7XG4gICAgICBoZWFkZXIuY2xhc3NMaXN0LmFkZChcIm9wZW5cIik7XG4gICAgICBzZWFyY2hJbnB1dC5mb2N1cygpO1xuICAgIH0pO1xuICAgIC8vIENsZWFyIHRoZSBzZWFyY2ggYm94IHdoZW4gY2xpY2tpbmcgb24gdGhlIGNsZWFyIGJ1dHRvblxuICAgIHNlYXJjaENsZWFyLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICBzZWFyY2hDbGVhci5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgICB3aW5kb3cuX3NlYXJjaERlc2t0b3AgJiYgd2luZG93Ll9zZWFyY2hEZXNrdG9wLmF1dG9jb21wbGV0ZS5zZXRWYWwoXCJcIik7XG4gICAgfSk7XG4gICAgLy8gVG9nZ2xlIHNlYXJjaCB3aGVuIEN0cmwgKyBLIGlzIHByZXNzZWRcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCAoZSkgPT4ge1xuICAgICAgaWYgKGUuY3RybEtleSAmJiBlLmNvZGUgPT09IFwiS2V5S1wiKSB7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgc2VhcmNoVG9nZ2xlLmNsaWNrKCk7XG4gICAgICB9XG4gICAgfSk7XG4gICAgLy8gUmVtb3ZlIHRoZSBtYXNrIHdoZW4gY2xpY2sgb24gaXRcbiAgICB3aW5kb3cuX3NlYXJjaERlc2t0b3BPbkNsaWNrTWFzayA9ICgpID0+IHtcbiAgICAgIGhlYWRlci5jbGFzc0xpc3QucmVtb3ZlKFwib3BlblwiKTtcbiAgICAgIHNlYXJjaExvYWRpbmcuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgICAgc2VhcmNoQ2xlYXIuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgICAgd2luZG93Ll9zZWFyY2hEZXNrdG9wICYmIHdpbmRvdy5fc2VhcmNoRGVza3RvcC5hdXRvY29tcGxldGUuc2V0VmFsKFwiXCIpO1xuICAgIH07XG4gICAgd2luZG93LmNsaWNrTWFza0V2ZW50U2V0LmFkZCh3aW5kb3cuX3NlYXJjaERlc2t0b3BPbkNsaWNrTWFzayk7XG4gIH1cbiAgLy8gRGlzcGxheSB0aGUgY2xlYXIgYnV0dG9uIG9ubHkgd2hlbiB0aGUgc2VhcmNoIGJveCBpcyBub3QgZW1wdHlcbiAgc2VhcmNoSW5wdXQuYWRkRXZlbnRMaXN0ZW5lcihcImlucHV0XCIsICgpID0+IHtcbiAgICBpZiAoc2VhcmNoSW5wdXQudmFsdWUgPT09IFwiXCIpIHNlYXJjaENsZWFyLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICBlbHNlIHNlYXJjaENsZWFyLnN0eWxlLmRpc3BsYXkgPSBcImlubGluZVwiO1xuICB9KTtcblxuICBjb25zdCBpbml0QXV0b3NlYXJjaCA9ICgpID0+IHtcbiAgICBjb25zdCBhdXRvc2VhcmNoID0gYXV0b2NvbXBsZXRlKFxuICAgICAgYCNzZWFyY2gtaW5wdXQtJHtzdWZmaXh9YCxcbiAgICAgIHtcbiAgICAgICAgaGludDogZmFsc2UsXG4gICAgICAgIGF1dG9zZWxlY3Q6IHRydWUsXG4gICAgICAgIGRyb3Bkb3duTWVudUNvbnRhaW5lcjogYCNzZWFyY2gtZHJvcGRvd24tJHtzdWZmaXh9YCxcbiAgICAgICAgY2xlYXJPblNlbGVjdGVkOiBmYWxzZSxcbiAgICAgICAgY3NzQ2xhc3NlczogeyBub1ByZWZpeDogdHJ1ZSB9LFxuICAgICAgICBkZWJ1ZzogdHJ1ZSxcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIG5hbWU6IFwic2VhcmNoXCIsXG4gICAgICAgIHNvdXJjZTogKHF1ZXJ5LCBjYWxsYmFjaykgPT4ge1xuICAgICAgICAgIHNlYXJjaExvYWRpbmcuc3R5bGUuZGlzcGxheSA9IFwiaW5saW5lXCI7XG4gICAgICAgICAgc2VhcmNoQ2xlYXIuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgICAgICAgIGNvbnN0IGZpbmlzaCA9IChyZXN1bHRzKSA9PiB7XG4gICAgICAgICAgICBzZWFyY2hMb2FkaW5nLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICAgICAgICAgIHNlYXJjaENsZWFyLnN0eWxlLmRpc3BsYXkgPSBcImlubGluZVwiO1xuICAgICAgICAgICAgY2FsbGJhY2socmVzdWx0cyk7XG4gICAgICAgICAgfTtcbiAgICAgICAgICBpZiAoc2VhcmNoQ29uZmlnLnR5cGUgPT09IFwiYWxnb2xpYVwiKSB7XG4gICAgICAgICAgICB3aW5kb3cuX2FsZ29saWFJbmRleCA9XG4gICAgICAgICAgICAgIHdpbmRvdy5fYWxnb2xpYUluZGV4IHx8XG4gICAgICAgICAgICAgIGFsZ29saWFzZWFyY2goXG4gICAgICAgICAgICAgICAgc2VhcmNoQ29uZmlnLmFsZ29saWFBcHBJRCxcbiAgICAgICAgICAgICAgICBzZWFyY2hDb25maWcuYWxnb2xpYVNlYXJjaEtleSxcbiAgICAgICAgICAgICAgKS5pbml0SW5kZXgoc2VhcmNoQ29uZmlnLmFsZ29saWFJbmRleCk7XG4gICAgICAgICAgICB3aW5kb3cuX2FsZ29saWFJbmRleFxuICAgICAgICAgICAgICAuc2VhcmNoKHF1ZXJ5LCB7XG4gICAgICAgICAgICAgICAgb2Zmc2V0OiAwLFxuICAgICAgICAgICAgICAgIGxlbmd0aDogbWF4UmVzdWx0TGVuZ3RoICogOCxcbiAgICAgICAgICAgICAgICBhdHRyaWJ1dGVzVG9IaWdobGlnaHQ6IFtcInRpdGxlXCJdLFxuICAgICAgICAgICAgICAgIGF0dHJpYnV0ZXNUb1JldHJpZXZlOiBbXCIqXCJdLFxuICAgICAgICAgICAgICAgIGF0dHJpYnV0ZXNUb1NuaXBwZXQ6IFtgY29udGVudDoke3NuaXBwZXRMZW5ndGh9YF0sXG4gICAgICAgICAgICAgICAgaGlnaGxpZ2h0UHJlVGFnOiBgPCR7aGlnaGxpZ2h0VGFnfT5gLFxuICAgICAgICAgICAgICAgIGhpZ2hsaWdodFBvc3RUYWc6IGA8LyR7aGlnaGxpZ2h0VGFnfT5gLFxuICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAudGhlbigoeyBoaXRzIH0pID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCByZXN1bHRzID0ge307XG4gICAgICAgICAgICAgICAgaGl0cy5mb3JFYWNoKFxuICAgICAgICAgICAgICAgICAgKHtcbiAgICAgICAgICAgICAgICAgICAgdXJpLFxuICAgICAgICAgICAgICAgICAgICBkYXRlLFxuICAgICAgICAgICAgICAgICAgICBfaGlnaGxpZ2h0UmVzdWx0OiB7IHRpdGxlIH0sXG4gICAgICAgICAgICAgICAgICAgIF9zbmlwcGV0UmVzdWx0OiB7IGNvbnRlbnQgfSxcbiAgICAgICAgICAgICAgICAgIH0pID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKFxuICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdHNbdXJpXSAmJlxuICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdHNbdXJpXS5jb250ZXh0Lmxlbmd0aCA+IGNvbnRlbnQudmFsdWVcbiAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0c1t1cmldID0ge1xuICAgICAgICAgICAgICAgICAgICAgIHVyaSxcbiAgICAgICAgICAgICAgICAgICAgICB0aXRsZTogdGl0bGUudmFsdWUsXG4gICAgICAgICAgICAgICAgICAgICAgZGF0ZSxcbiAgICAgICAgICAgICAgICAgICAgICBjb250ZXh0OiBjb250ZW50LnZhbHVlLFxuICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgIGZpbmlzaChPYmplY3QudmFsdWVzKHJlc3VsdHMpLnNsaWNlKDAsIG1heFJlc3VsdExlbmd0aCkpO1xuICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgICAgICAgICAgICAgICBmaW5pc2goW10pO1xuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICB9IGVsc2UgaWYgKHNlYXJjaENvbmZpZy50eXBlID09PSBcImZ1c2VcIikge1xuICAgICAgICAgICAgY29uc3Qgc2VhcmNoID0gKCkgPT4ge1xuICAgICAgICAgICAgICBjb25zdCByZXN1bHRzID0ge307XG4gICAgICAgICAgICAgIHdpbmRvdy5faW5kZXhcbiAgICAgICAgICAgICAgICAuc2VhcmNoKHF1ZXJ5KVxuICAgICAgICAgICAgICAgIC5mb3JFYWNoKCh7IGl0ZW0sIHJlZkluZGV4LCBtYXRjaGVzIH0pID0+IHtcbiAgICAgICAgICAgICAgICAgIGxldCB0aXRsZSA9IGl0ZW0udGl0bGU7XG4gICAgICAgICAgICAgICAgICBsZXQgY29udGVudCA9IGl0ZW0uY29udGVudDtcbiAgICAgICAgICAgICAgICAgIG1hdGNoZXMuZm9yRWFjaCgoeyBpbmRpY2VzLCB2YWx1ZSwga2V5IH0pID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGtleSA9PT0gXCJjb250ZW50XCIpIHtcbiAgICAgICAgICAgICAgICAgICAgICBsZXQgb2Zmc2V0ID0gMDtcbiAgICAgICAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGluZGljZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHN1YnN0ciA9IGNvbnRlbnQuc3Vic3RyaW5nKFxuICAgICAgICAgICAgICAgICAgICAgICAgICBpbmRpY2VzW2ldWzBdICsgb2Zmc2V0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICBpbmRpY2VzW2ldWzFdICsgMSArIG9mZnNldCxcbiAgICAgICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB0YWcgPVxuICAgICAgICAgICAgICAgICAgICAgICAgICBgPCR7aGlnaGxpZ2h0VGFnfT5gICsgc3Vic3RyICsgYDwvJHtoaWdobGlnaHRUYWd9PmA7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb250ZW50ID1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudC5zdWJzdHJpbmcoMCwgaW5kaWNlc1tpXVswXSArIG9mZnNldCkgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICB0YWcgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICBjb250ZW50LnN1YnN0cmluZyhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbmRpY2VzW2ldWzFdICsgMSArIG9mZnNldCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250ZW50Lmxlbmd0aCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIG9mZnNldCArPSBoaWdobGlnaHRUYWcubGVuZ3RoICogMiArIDU7XG4gICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGtleSA9PT0gXCJ0aXRsZVwiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgbGV0IG9mZnNldCA9IDA7XG4gICAgICAgICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBpbmRpY2VzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBzdWJzdHIgPSB0aXRsZS5zdWJzdHJpbmcoXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGluZGljZXNbaV1bMF0gKyBvZmZzZXQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGluZGljZXNbaV1bMV0gKyAxICsgb2Zmc2V0LFxuICAgICAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHRhZyA9XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGA8JHtoaWdobGlnaHRUYWd9PmAgKyBzdWJzdHIgKyBgPC8ke2hpZ2hsaWdodFRhZ30+YDtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlID1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGUuc3Vic3RyaW5nKDAsIGluZGljZXNbaV1bMF0gKyBvZmZzZXQpICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgdGFnICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGUuc3Vic3RyaW5nKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluZGljZXNbaV1bMV0gKyAxICsgb2Zmc2V0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQubGVuZ3RoLFxuICAgICAgICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgICAgICAgICAgb2Zmc2V0ICs9IGhpZ2hsaWdodFRhZy5sZW5ndGggKiAyICsgNTtcbiAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgcmVzdWx0c1tpdGVtLnVyaV0gPSB7XG4gICAgICAgICAgICAgICAgICAgIHVyaTogaXRlbS51cmksXG4gICAgICAgICAgICAgICAgICAgIHRpdGxlLFxuICAgICAgICAgICAgICAgICAgICBkYXRlOiBpdGVtLmRhdGUsXG4gICAgICAgICAgICAgICAgICAgIGNvbnRleHQ6IGNvbnRlbnQsXG4gICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICByZXR1cm4gT2JqZWN0LnZhbHVlcyhyZXN1bHRzKS5zbGljZSgwLCBtYXhSZXN1bHRMZW5ndGgpO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGlmICghd2luZG93Ll9pbmRleCkge1xuICAgICAgICAgICAgICBmZXRjaChzZWFyY2hDb25maWcuZnVzZUluZGV4VVJMKVxuICAgICAgICAgICAgICAgIC50aGVuKChyZXNwb25zZSkgPT4gcmVzcG9uc2UuanNvbigpKVxuICAgICAgICAgICAgICAgIC50aGVuKChkYXRhKSA9PiB7XG4gICAgICAgICAgICAgICAgICBjb25zdCBvcHRpb25zID0ge1xuICAgICAgICAgICAgICAgICAgICBpc0Nhc2VTZW5zaXRpdmUsXG4gICAgICAgICAgICAgICAgICAgIGZpbmRBbGxNYXRjaGVzLFxuICAgICAgICAgICAgICAgICAgICBtaW5NYXRjaENoYXJMZW5ndGgsXG4gICAgICAgICAgICAgICAgICAgIGxvY2F0aW9uLFxuICAgICAgICAgICAgICAgICAgICB0aHJlc2hvbGQsXG4gICAgICAgICAgICAgICAgICAgIGRpc3RhbmNlLFxuICAgICAgICAgICAgICAgICAgICBpZ25vcmVMb2NhdGlvbixcbiAgICAgICAgICAgICAgICAgICAgdXNlRXh0ZW5kZWRTZWFyY2gsXG4gICAgICAgICAgICAgICAgICAgIGlnbm9yZUZpZWxkTm9ybSxcbiAgICAgICAgICAgICAgICAgICAgaW5jbHVkZVNjb3JlOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgc2hvdWxkU29ydDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgaW5jbHVkZU1hdGNoZXM6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIGtleXM6IFtcImNvbnRlbnRcIiwgXCJ0aXRsZVwiXSxcbiAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICB3aW5kb3cuX2luZGV4ID0gbmV3IEZ1c2UoZGF0YSwgb3B0aW9ucyk7XG4gICAgICAgICAgICAgICAgICBmaW5pc2goc2VhcmNoKCkpO1xuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgICAgICAgICAgICAgICAgIGZpbmlzaChbXSk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9IGVsc2UgZmluaXNoKHNlYXJjaCgpKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHRlbXBsYXRlczoge1xuICAgICAgICAgIHN1Z2dlc3Rpb246ICh7IHRpdGxlLCB1cmksIGRhdGUsIGNvbnRleHQgfSkgPT5cbiAgICAgICAgICAgIGA8ZGl2PjxhIGhyZWY9JHt1cml9PjxzcGFuIGNsYXNzPVwic3VnZ2VzdGlvbi10aXRsZVwiPiR7dGl0bGV9PC9zcGFuPjwvYT48c3BhbiBjbGFzcz1cInN1Z2dlc3Rpb24tZGF0ZVwiPiR7ZGF0ZX08L3NwYW4+PC9kaXY+PGRpdiBjbGFzcz1cInN1Z2dlc3Rpb24tY29udGV4dFwiPiR7Y29udGV4dH08L2Rpdj5gLFxuICAgICAgICAgIGVtcHR5OiAoeyBxdWVyeSB9KSA9PlxuICAgICAgICAgICAgYDxkaXYgY2xhc3M9XCJzZWFyY2gtZW1wdHlcIj4ke3NlYXJjaENvbmZpZy5ub1Jlc3VsdHNGb3VuZH06IDxzcGFuIGNsYXNzPVwic2VhcmNoLXF1ZXJ5XCI+XCIke2VzY2FwZShxdWVyeSl9XCI8L3NwYW4+PC9kaXY+YCxcbiAgICAgICAgICBmb290ZXI6ICgpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHsgc2VhcmNoVHlwZSwgaWNvbiwgaHJlZiB9ID1cbiAgICAgICAgICAgICAgc2VhcmNoQ29uZmlnLnR5cGUgPT09IFwiYWxnb2xpYVwiXG4gICAgICAgICAgICAgICAgPyB7XG4gICAgICAgICAgICAgICAgICAgIHNlYXJjaFR5cGU6IFwiYWxnb2xpYVwiLFxuICAgICAgICAgICAgICAgICAgICBpY29uOiAnPHN2ZyBjbGFzcz1cImljb25cIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgdmlld0JveD1cIjAgMCA0NDggNTEyXCI+PCEtLSBGb250IEF3ZXNvbWUgRnJlZSA1LjE1LjQgYnkgQGZvbnRhd2Vzb21lIC0gaHR0cHM6Ly9mb250YXdlc29tZS5jb20gTGljZW5zZSAtIGh0dHBzOi8vZm9udGF3ZXNvbWUuY29tL2xpY2Vuc2UvZnJlZSAoSWNvbnM6IENDIEJZIDQuMCwgRm9udHM6IFNJTCBPRkwgMS4xLCBDb2RlOiBNSVQgTGljZW5zZSkgLS0+PHBhdGggZD1cIk0yMjkuMyAxODIuNmMtNDkuMyAwLTg5LjIgMzkuOS04OS4yIDg5LjIgMCA0OS4zIDM5LjkgODkuMiA4OS4yIDg5LjJzODkuMi0zOS45IDg5LjItODkuMmMwLTQ5LjMtNDAtODkuMi04OS4yLTg5LjJ6bTYyLjcgNTYuNmwtNTguOSAzMC42Yy0xLjguOS0zLjgtLjQtMy44LTIuM1YyMDFjMC0xLjUgMS4zLTIuNyAyLjctMi42IDI2LjIgMSA0OC45IDE1LjcgNjEuMSAzNy4xLjcgMS4zLjIgMy0xLjEgMy43ek0zODkuMSAzMkg1OC45QzI2LjQgMzIgMCA1OC40IDAgOTAuOVY0MjFjMCAzMi42IDI2LjQgNTkgNTguOSA1OUgzODljMzIuNiAwIDU4LjktMjYuNCA1OC45LTU4LjlWOTAuOUM0NDggNTguNCA0MjEuNiAzMiAzODkuMSAzMnptLTIwMi42IDg0LjdjMC0xMC44IDguNy0xOS41IDE5LjUtMTkuNWg0NS4zYzEwLjggMCAxOS41IDguNyAxOS41IDE5LjV2MTUuNGMwIDEuOC0xLjcgMy0zLjMgMi41LTEyLjMtMy40LTI1LjEtNS4xLTM4LjEtNS4xLTEzLjUgMC0yNi43IDEuOC0zOS40IDUuNS0xLjcuNS0zLjQtLjgtMy40LTIuNXYtMTUuOHptLTg0LjQgMzdsOS4yLTkuMmM3LjYtNy42IDE5LjktNy42IDI3LjUgMGw3LjcgNy43YzEuMSAxLjEgMSAzLS4zIDQtNi4yIDQuNS0xMi4xIDkuNC0xNy42IDE0LjktNS40IDUuNC0xMC40IDExLjMtMTQuOCAxNy40LTEgMS4zLTIuOSAxLjUtNCAuM2wtNy43LTcuN2MtNy42LTcuNS03LjYtMTkuOCAwLTI3LjR6bTEyNy4yIDI0NC44Yy03MCAwLTEyNi42LTU2LjctMTI2LjYtMTI2LjZzNTYuNy0xMjYuNiAxMjYuNi0xMjYuNmM3MCAwIDEyNi42IDU2LjYgMTI2LjYgMTI2LjYgMCA2OS44LTU2LjcgMTI2LjYtMTI2LjYgMTI2LjZ6XCIvPjwvc3ZnPicsXG4gICAgICAgICAgICAgICAgICAgIGhyZWY6IFwiaHR0cHM6Ly93d3cuYWxnb2xpYS5jb20vXCIsXG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgOiB7XG4gICAgICAgICAgICAgICAgICAgIHNlYXJjaFR5cGU6IFwiRnVzZS5qc1wiLFxuICAgICAgICAgICAgICAgICAgICBpY29uOiBcIlwiLFxuICAgICAgICAgICAgICAgICAgICBocmVmOiBcImh0dHBzOi8vZnVzZWpzLmlvL1wiLFxuICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHJldHVybiBgPGRpdiBjbGFzcz1cInNlYXJjaC1mb290ZXJcIj5TZWFyY2ggYnkgPGEgaHJlZj1cIiR7aHJlZn1cIiByZWw9XCJub29wZW5lciBub3JlZmZlclwiIHRhcmdldD1cIl9ibGFua1wiPiR7aWNvbn0gJHtzZWFyY2hUeXBlfTwvYT48L2Rpdj5gO1xuICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgICk7XG4gICAgYXV0b3NlYXJjaC5vbihcbiAgICAgIFwiYXV0b2NvbXBsZXRlOnNlbGVjdGVkXCIsXG4gICAgICAoZXZlbnQsIF9zdWdnZXN0aW9uLCBfZGF0YXNldCwgX2NvbnRleHQpID0+IHtcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgIH0sXG4gICAgKTtcbiAgICBpZiAoaXNNb2JpbGUpIHdpbmRvdy5fc2VhcmNoTW9iaWxlID0gYXV0b3NlYXJjaDtcbiAgICBlbHNlIHdpbmRvdy5fc2VhcmNoRGVza3RvcCA9IGF1dG9zZWFyY2g7XG4gIH07XG4gIGZ1bmN0aW9uIGxvYWRTY3JpcHQoaWQsIHVybCwgb25sb2FkKSB7XG4gICAgaWYgKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCMke2lkfWApID09PSBudWxsKSB7XG4gICAgICBjb25zdCBoZWFkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcImhlYWRcIik7XG4gICAgICBjb25zdCBzY3JpcHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic2NyaXB0XCIpO1xuICAgICAgc2NyaXB0LnNldEF0dHJpYnV0ZShcInNyY1wiLCB1cmwpO1xuICAgICAgc2NyaXB0LnNldEF0dHJpYnV0ZShcImlkXCIsIGlkKTtcbiAgICAgIHNjcmlwdC5vbmxvYWQgPSBvbmxvYWQ7XG4gICAgICBoZWFkLmFwcGVuZENoaWxkKHNjcmlwdCk7XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIGluaXREZXRhaWxzKCkge1xuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLmRldGFpbHNcIikuZm9yRWFjaCgoJGRldGFpbHMpID0+IHtcbiAgICBjb25zdCAkc3VtbWFyeSA9ICRkZXRhaWxzLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXG4gICAgICBcImRldGFpbHMtc3VtbWFyeVwiLFxuICAgIClbMF0gYXMgSFRNTERpdkVsZW1lbnQ7XG4gICAgY29uc3QgY29udGVudCA9ICRzdW1tYXJ5Lm5leHRFbGVtZW50U2libGluZyBhcyBIVE1MRGl2RWxlbWVudDtcbiAgICBpZiAoJGRldGFpbHMuY2xhc3NMaXN0LmNvbnRhaW5zKFwib3BlblwiKSkge1xuICAgICAgY29udGVudC5zdHlsZS5tYXhIZWlnaHQgPSBjb250ZW50LnNjcm9sbEhlaWdodCArIFwicHhcIjtcbiAgICB9XG4gICAgJHN1bW1hcnkuYWRkRXZlbnRMaXN0ZW5lcihcbiAgICAgIFwiY2xpY2tcIixcbiAgICAgICgpID0+IHtcbiAgICAgICAgaWYgKCRkZXRhaWxzLmNsYXNzTGlzdC5jb250YWlucyhcIm9wZW5cIikpIHtcbiAgICAgICAgICBjb250ZW50LnN0eWxlLm1heEhlaWdodCA9IFwiMHB4XCI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY29udGVudC5zdHlsZS5tYXhIZWlnaHQgPSBjb250ZW50LnNjcm9sbEhlaWdodCArIFwicHhcIjtcbiAgICAgICAgfVxuICAgICAgICAkZGV0YWlscy5jbGFzc0xpc3QudG9nZ2xlKFwib3BlblwiKTtcbiAgICAgIH0sXG4gICAgICBmYWxzZSxcbiAgICApO1xuICAgIGFkZEV2ZW50TGlzdGVuZXIoXCJiZWZvcmVwcmludFwiLCAoKSA9PiB7XG4gICAgICBpZiAoJGRldGFpbHMuY2xhc3NMaXN0LmNvbnRhaW5zKFwib3BlblwiKSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICAkc3VtbWFyeS5jbGljaygpO1xuICAgIH0pO1xuICB9KTtcbn1cblxuZnVuY3Rpb24gaW5pdExpZ2h0R2FsbGVyeSgpIHtcbiAgaWYgKHdpbmRvdy5jb25maWcubGlnaHRHYWxsZXJ5KSB7XG4gICAgbGlnaHRHYWxsZXJ5KFxuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjb250ZW50XCIpLFxuICAgICAgd2luZG93LmNvbmZpZy5saWdodEdhbGxlcnksXG4gICAgKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBpbml0VGFibGUoKSB7XG4gIGZvckVhY2goZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5jb250ZW50IHRhYmxlXCIpLCAoJHRhYmxlKSA9PiB7XG4gICAgY29uc3QgJHdyYXBwZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICR3cmFwcGVyLmNsYXNzTmFtZSA9IFwidGFibGUtd3JhcHBlclwiO1xuICAgICR0YWJsZS5wYXJlbnRFbGVtZW50LnJlcGxhY2VDaGlsZCgkd3JhcHBlciwgJHRhYmxlKTtcbiAgICAkd3JhcHBlci5hcHBlbmRDaGlsZCgkdGFibGUpO1xuICAgIGlmICh3aW5kb3cuY29uZmlnPy50YWJsZT8uc29ydCkge1xuICAgICAgbmV3IFRhYmxlc29ydCgkdGFibGUpO1xuICAgIH1cbiAgfSk7XG59XG5cbmZ1bmN0aW9uIGluaXRUb2MoKSB7XG4gIGNvbnN0IHRvY0NvcmUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIlRhYmxlT2ZDb250ZW50c1wiKTtcbiAgLy8gUmV0dXJuIGRpcmVjdGx5IGlmIG5vIHRvY1xuICBpZiAodG9jQ29yZSA9PT0gbnVsbCkgcmV0dXJuO1xuICBjb25zdCBpc1RvY1N0YXRpYyA9XG4gICAgd2luZG93Lm1hdGNoTWVkaWEgJiZcbiAgICB3aW5kb3cubWF0Y2hNZWRpYShcIm9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMDAwcHgpXCIpLm1hdGNoZXM7XG5cbiAgaWYgKFxuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidG9jLXN0YXRpY1wiKS5nZXRBdHRyaWJ1dGUoXCJrZXB0XCIpIHx8XG4gICAgaXNUb2NTdGF0aWNcbiAgKSB7XG4gICAgaWYgKHdpbmRvdy5fdG9jT25TY3JvbGwpIHdpbmRvdy5zY3JvbGxFdmVudFNldC5kZWxldGUod2luZG93Ll90b2NPblNjcm9sbCk7XG4gIH0gZWxzZSB7XG4gICAgY29uc3QgdG9jID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0b2MtYXV0b1wiKTtcbiAgICBjb25zdCB0b2NMaW5rRWxlbWVudHMgPSB0b2NDb3JlLnF1ZXJ5U2VsZWN0b3JBbGwoXCJhOmZpcnN0LWNoaWxkXCIpO1xuICAgIGNvbnN0IHRvY0xpRWxlbWVudHMgPSB0b2NDb3JlLmdldEVsZW1lbnRzQnlUYWdOYW1lKFwibGlcIik7XG4gICAgY29uc3QgaGVhZGVyTGlua0VsZW1lbnRzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcImhlYWRlckxpbmtcIik7XG4gICAgY29uc3QgaGVhZGVySXNGaXhlZCA9XG4gICAgICBkb2N1bWVudC5ib2R5LmdldEF0dHJpYnV0ZShcImhlYWRlci1kZXNrdG9wXCIpICE9PSBcIm5vcm1hbFwiO1xuICAgIGNvbnN0IGhlYWRlckhlaWdodCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiaGVhZGVyLWRlc2t0b3BcIikub2Zmc2V0SGVpZ2h0O1xuICAgIGNvbnN0IFRPUF9TUEFDSU5HID0gMjAgKyAoaGVhZGVySXNGaXhlZCA/IGhlYWRlckhlaWdodCA6IDApO1xuICAgIGNvbnN0IG1pblRvY1RvcCA9IHRvYy5vZmZzZXRUb3A7XG4gICAgY29uc3QgbWluU2Nyb2xsVG9wID1cbiAgICAgIG1pblRvY1RvcCAtIFRPUF9TUEFDSU5HICsgKGhlYWRlcklzRml4ZWQgPyAwIDogaGVhZGVySGVpZ2h0KTtcbiAgICB3aW5kb3cuX3RvY09uU2Nyb2xsID1cbiAgICAgIHdpbmRvdy5fdG9jT25TY3JvbGwgfHxcbiAgICAgICgoKSA9PiB7XG4gICAgICAgIGNvbnN0IGZvb3RlclRvcCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicG9zdC1mb290ZXJcIikub2Zmc2V0VG9wO1xuICAgICAgICBjb25zdCBtYXhUb2NUb3AgPSBmb290ZXJUb3AgLSB0b2MuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkuaGVpZ2h0O1xuICAgICAgICBjb25zdCBtYXhTY3JvbGxUb3AgPVxuICAgICAgICAgIG1heFRvY1RvcCAtIFRPUF9TUEFDSU5HICsgKGhlYWRlcklzRml4ZWQgPyAwIDogaGVhZGVySGVpZ2h0KTtcbiAgICAgICAgaWYgKHdpbmRvdy5uZXdTY3JvbGxUb3AgPCBtaW5TY3JvbGxUb3ApIHtcbiAgICAgICAgICAvLyBJZiBzY3JvbGwgdG8gdGhlIHRvcCBvZiB0aGUgcGFnZVxuICAgICAgICAgIC8vIFNldCB0b2MgdG8gYWJzb2x1dGVcbiAgICAgICAgICB0b2Muc3R5bGUucG9zaXRpb24gPSBcImFic29sdXRlXCI7XG4gICAgICAgICAgdG9jLnN0eWxlLnRvcCA9IGAke21pblRvY1RvcH1weGA7XG4gICAgICAgIH0gZWxzZSBpZiAod2luZG93Lm5ld1Njcm9sbFRvcCA+IG1heFNjcm9sbFRvcCkge1xuICAgICAgICAgIC8vIElmIHNjcm9sbCB0byB0aGUgYm90dG9tIG9mIHRoZSBwYWdlXG4gICAgICAgICAgLy8gU2V0IHRvYyB0byBhYnNvbHV0ZVxuICAgICAgICAgIHRvYy5zdHlsZS5wb3NpdGlvbiA9IFwiYWJzb2x1dGVcIjtcbiAgICAgICAgICB0b2Muc3R5bGUudG9wID0gYCR7bWF4VG9jVG9wfXB4YDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAvLyBJZiBpbiB0aGUgbWlkZGxlXG4gICAgICAgICAgLy8gU2V0IHRvYyB0byBmaXhlZCB3aXRoIFRPUF9TUEFDSU5HXG4gICAgICAgICAgdG9jLnN0eWxlLnBvc2l0aW9uID0gXCJmaXhlZFwiO1xuICAgICAgICAgIHRvYy5zdHlsZS50b3AgPSBgJHtUT1BfU1BBQ0lOR31weGA7XG4gICAgICAgIH1cbiAgICAgICAgLy8gVXBkYXRlIHRoZSBhY3RpdmUgdG9jIGxpbmtcbiAgICAgICAgLy8gUmV0dXJuIGRpcmVjdGx5IGlmIG5vIHRvYyBsaW5rXG4gICAgICAgIGlmICh0b2NMaW5rRWxlbWVudHMubGVuZ3RoID09PSAwKSByZXR1cm47XG5cbiAgICAgICAgbGV0IGFjdGl2ZVRvY0luZGV4ID0gLTE7XG4gICAgICAgIGNvbnN0IElOREVYX1NQQUNJTkcgPSBUT1BfU1BBQ0lORyArIHdpbmRvdy5uZXdTY3JvbGxUb3A7XG4gICAgICAgIC8vIElmIHRoZSBJTkRFWF9TUEFDSU5HIGlzIGJlbG93IHRoZSBsYXN0IGhlYWRlciBsaW5rXG4gICAgICAgIC8vIGFjdGl2YXRlIHRoZSBsYXN0IGVsZW1lbnRcbiAgICAgICAgaWYgKFxuICAgICAgICAgIGhlYWRlckxpbmtFbGVtZW50c1toZWFkZXJMaW5rRWxlbWVudHMubGVuZ3RoIC0gMV0ub2Zmc2V0VG9wIDxcbiAgICAgICAgICBJTkRFWF9TUEFDSU5HXG4gICAgICAgICkge1xuICAgICAgICAgIGFjdGl2ZVRvY0luZGV4ID0gaGVhZGVyTGlua0VsZW1lbnRzLmxlbmd0aCAtIDE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgLy8gT3RoZXJ3aXNlIGFjdGl2YXRlIHRoZSBlbGVtZW50IHRoYXQgaXMgaW4gYmV0d2VlblxuICAgICAgICAgIC8vIFVzZSBvZmZzZXRUb3AgaW5zdGVhZCBvZiBnZXRCb3VuZGluZ0NsaWVudFJlY3QoKS50b3AgZm9yIGJldHRlciBwZXJmb3JtYW5jZVxuICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgaGVhZGVyTGlua0VsZW1lbnRzLmxlbmd0aCAtIDE7IGkrKykge1xuICAgICAgICAgICAgY29uc3QgdGhpc1RvcCA9IGhlYWRlckxpbmtFbGVtZW50c1tpXS5vZmZzZXRUb3A7XG4gICAgICAgICAgICBjb25zdCBuZXh0VG9wID0gaGVhZGVyTGlua0VsZW1lbnRzW2kgKyAxXS5vZmZzZXRUb3A7XG4gICAgICAgICAgICBpZiAodGhpc1RvcCA8PSBJTkRFWF9TUEFDSU5HICYmIG5leHRUb3AgPiBJTkRFWF9TUEFDSU5HKSB7XG4gICAgICAgICAgICAgIGFjdGl2ZVRvY0luZGV4ID0gaTtcbiAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIC8vIFJlbW92ZSBhbGwgbGVnYWN5IHN0YXRlc1xuICAgICAgICBBcnJheS5mcm9tKHRvY0xpbmtFbGVtZW50cykuZm9yRWFjaCgodG9jTGluaykgPT5cbiAgICAgICAgICB0b2NMaW5rLmNsYXNzTGlzdC5yZW1vdmUoXCJhY3RpdmVcIiksXG4gICAgICAgICk7XG4gICAgICAgIEFycmF5LmZyb20odG9jTGlFbGVtZW50cykuZm9yRWFjaCgodG9jTGkpID0+XG4gICAgICAgICAgdG9jTGkuY2xhc3NMaXN0LnJlbW92ZShcImhhcy1hY3RpdmVcIiksXG4gICAgICAgICk7XG5cbiAgICAgICAgLy8gU2V0IHRoZSB0b2NMaW5rRWxlbWVudCB0byBhY3RpdmVcbiAgICAgICAgLy8gYW5kIGFsbCBpdHMgcGFyZW50IHRvIGhhcy1hY3RpdmVcbiAgICAgICAgaWYgKGFjdGl2ZVRvY0luZGV4ID49IDAgJiYgYWN0aXZlVG9jSW5kZXggPCB0b2NMaW5rRWxlbWVudHMubGVuZ3RoKSB7XG4gICAgICAgICAgdG9jTGlua0VsZW1lbnRzW2FjdGl2ZVRvY0luZGV4XS5jbGFzc0xpc3QuYWRkKFwiYWN0aXZlXCIpO1xuICAgICAgICAgIC8vIHRvY0xpbmtFbGVtZW50c1thY3RpdmVUb2NJbmRleF0uc2Nyb2xsSW50b1ZpZXcoe1xuICAgICAgICAgIC8vICAgYmVoYXZpb3I6ICdzbW9vdGgnLFxuICAgICAgICAgIC8vICAgYmxvY2s6ICdjZW50ZXInXG4gICAgICAgICAgLy8gfSlcbiAgICAgICAgICBsZXQgcGFyZW50ID0gdG9jTGlua0VsZW1lbnRzW2FjdGl2ZVRvY0luZGV4XS5wYXJlbnRFbGVtZW50O1xuICAgICAgICAgIHdoaWxlIChwYXJlbnQgIT09IHRvY0NvcmUpIHtcbiAgICAgICAgICAgIHBhcmVudC5jbGFzc0xpc3QuYWRkKFwiaGFzLWFjdGl2ZVwiKTtcbiAgICAgICAgICAgIHBhcmVudCA9IHBhcmVudC5wYXJlbnRFbGVtZW50LnBhcmVudEVsZW1lbnQ7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB3aW5kb3cuX3RvY09uU2Nyb2xsKCk7XG4gICAgd2luZG93LnNjcm9sbEV2ZW50U2V0LmFkZCh3aW5kb3cuX3RvY09uU2Nyb2xsKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBpbml0TWFwYm94KCkge1xuICBpZiAod2luZG93LmNvbmZpZy5tYXBib3gpIHtcbiAgICBtYXBib3hnbC5hY2Nlc3NUb2tlbiA9IHdpbmRvdy5jb25maWcubWFwYm94LmFjY2Vzc1Rva2VuO1xuICAgIG1hcGJveGdsLnNldFJUTFRleHRQbHVnaW4od2luZG93LmNvbmZpZy5tYXBib3guUlRMVGV4dFBsdWdpbik7XG4gICAgd2luZG93Ll9tYXBib3hBcnIgPSB3aW5kb3cuX21hcGJveEFyciB8fCBbXTtcbiAgICBmb3JFYWNoKGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJtYXBib3hcIiksICgkbWFwYm94KSA9PiB7XG4gICAgICBjb25zdCB7XG4gICAgICAgIGxuZyxcbiAgICAgICAgbGF0LFxuICAgICAgICB6b29tLFxuICAgICAgICBsaWdodFN0eWxlLFxuICAgICAgICBkYXJrU3R5bGUsXG4gICAgICAgIG1hcmtlZCxcbiAgICAgICAgbmF2aWdhdGlvbixcbiAgICAgICAgZ2VvbG9jYXRlLFxuICAgICAgICBzY2FsZSxcbiAgICAgICAgZnVsbHNjcmVlbixcbiAgICAgIH0gPSB3aW5kb3cuY29uZmlnLmRhdGFbJG1hcGJveC5pZF07XG4gICAgICBjb25zdCBtYXBib3ggPSBuZXcgbWFwYm94Z2wuTWFwKHtcbiAgICAgICAgY29udGFpbmVyOiAkbWFwYm94LFxuICAgICAgICBjZW50ZXI6IFtsbmcsIGxhdF0sXG4gICAgICAgIHpvb20sXG4gICAgICAgIG1pblpvb206IDAuMixcbiAgICAgICAgc3R5bGU6IHdpbmRvdy5pc0RhcmsgPyBkYXJrU3R5bGUgOiBsaWdodFN0eWxlLFxuICAgICAgICBhdHRyaWJ1dGlvbkNvbnRyb2w6IGZhbHNlLFxuICAgICAgfSk7XG4gICAgICBpZiAobWFya2VkKSB7XG4gICAgICAgIG5ldyBtYXBib3hnbC5NYXJrZXIoKS5zZXRMbmdMYXQoW2xuZywgbGF0XSkuYWRkVG8obWFwYm94KTtcbiAgICAgIH1cbiAgICAgIGlmIChuYXZpZ2F0aW9uKSB7XG4gICAgICAgIG1hcGJveC5hZGRDb250cm9sKG5ldyBtYXBib3hnbC5OYXZpZ2F0aW9uQ29udHJvbCgpLCBcImJvdHRvbS1yaWdodFwiKTtcbiAgICAgIH1cbiAgICAgIGlmIChnZW9sb2NhdGUpIHtcbiAgICAgICAgbWFwYm94LmFkZENvbnRyb2woXG4gICAgICAgICAgbmV3IG1hcGJveGdsLkdlb2xvY2F0ZUNvbnRyb2woe1xuICAgICAgICAgICAgcG9zaXRpb25PcHRpb25zOiB7XG4gICAgICAgICAgICAgIGVuYWJsZUhpZ2hBY2N1cmFjeTogdHJ1ZSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzaG93VXNlckxvY2F0aW9uOiB0cnVlLFxuICAgICAgICAgICAgdHJhY2tVc2VyTG9jYXRpb246IHRydWUsXG4gICAgICAgICAgfSksXG4gICAgICAgICAgXCJib3R0b20tcmlnaHRcIixcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICAgIGlmIChzY2FsZSkge1xuICAgICAgICBtYXBib3guYWRkQ29udHJvbChuZXcgbWFwYm94Z2wuU2NhbGVDb250cm9sKCkpO1xuICAgICAgfVxuICAgICAgaWYgKGZ1bGxzY3JlZW4pIHtcbiAgICAgICAgbWFwYm94LmFkZENvbnRyb2wobmV3IG1hcGJveGdsLkZ1bGxzY3JlZW5Db250cm9sKCkpO1xuICAgICAgfVxuICAgICAgbWFwYm94LmFkZENvbnRyb2wobmV3IE1hcGJveExhbmd1YWdlKCkpO1xuICAgICAgd2luZG93Ll9tYXBib3hBcnIucHVzaChtYXBib3gpO1xuICAgIH0pO1xuICAgIHdpbmRvdy5fbWFwYm94T25Td2l0Y2hUaGVtZSA9ICgpID0+IHtcbiAgICAgIGZvckVhY2god2luZG93Ll9tYXBib3hBcnIsIChtYXBib3gpID0+IHtcbiAgICAgICAgY29uc3QgJG1hcGJveCA9IG1hcGJveC5nZXRDb250YWluZXIoKTtcbiAgICAgICAgY29uc3QgeyBsaWdodFN0eWxlLCBkYXJrU3R5bGUgfSA9IHdpbmRvdy5jb25maWcuZGF0YVskbWFwYm94LmlkXTtcbiAgICAgICAgbWFwYm94LnNldFN0eWxlKHdpbmRvdy5pc0RhcmsgPyBkYXJrU3R5bGUgOiBsaWdodFN0eWxlKTtcbiAgICAgICAgbWFwYm94LmFkZENvbnRyb2wobmV3IE1hcGJveExhbmd1YWdlKCkpO1xuICAgICAgfSk7XG4gICAgfTtcbiAgICB3aW5kb3cuc3dpdGNoVGhlbWVFdmVudFNldC5hZGQod2luZG93Ll9tYXBib3hPblN3aXRjaFRoZW1lKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBpbml0VHlwZWl0KCkge1xuICBpZiAod2luZG93LmNvbmZpZy50eXBlaXQpIHtcbiAgICBjb25zdCB0eXBlaXRDb25maWcgPSB3aW5kb3cuY29uZmlnLnR5cGVpdDtcbiAgICBjb25zdCBzcGVlZCA9IHR5cGVpdENvbmZpZy5zcGVlZCA/IHR5cGVpdENvbmZpZy5zcGVlZCA6IDEwMDtcbiAgICBjb25zdCBjdXJzb3JTcGVlZCA9IHR5cGVpdENvbmZpZy5jdXJzb3JTcGVlZFxuICAgICAgPyB0eXBlaXRDb25maWcuY3Vyc29yU3BlZWRcbiAgICAgIDogMTAwMDtcbiAgICBjb25zdCBjdXJzb3JDaGFyID0gdHlwZWl0Q29uZmlnLmN1cnNvckNoYXIgPyB0eXBlaXRDb25maWcuY3Vyc29yQ2hhciA6IFwifFwiO1xuICAgIE9iamVjdC52YWx1ZXModHlwZWl0Q29uZmlnLmRhdGEpLmZvckVhY2goKGdyb3VwKSA9PiB7XG4gICAgICBjb25zdCB0eXBlb25lID0gKGkpID0+IHtcbiAgICAgICAgY29uc3QgaWQgPSBncm91cFtpXTtcbiAgICAgICAgaWYgKCFkb2N1bWVudC5nZXRFbGVtZW50QnlJZChpZCkuaGFzQXR0cmlidXRlKFwiZGF0YS10eXBlaXQtaWRcIikpIHtcbiAgICAgICAgICBjb25zdCBpbnN0YW5jZSA9IG5ldyBUeXBlSXQoYCMke2lkfWAsIHtcbiAgICAgICAgICAgIHN0cmluZ3M6IHdpbmRvdy5jb25maWcuZGF0YVtpZF0sXG4gICAgICAgICAgICBzcGVlZCxcbiAgICAgICAgICAgIGxpZmVMaWtlOiB0cnVlLFxuICAgICAgICAgICAgY3Vyc29yU3BlZWQsXG4gICAgICAgICAgICBjdXJzb3JDaGFyLFxuICAgICAgICAgICAgd2FpdFVudGlsVmlzaWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGFmdGVyQ29tcGxldGU6ICgpID0+IHtcbiAgICAgICAgICAgICAgaWYgKGkgPT09IGdyb3VwLmxlbmd0aCAtIDEpIHtcbiAgICAgICAgICAgICAgICBpZiAodHlwZWl0Q29uZmlnLmR1cmF0aW9uID49IDApIHtcbiAgICAgICAgICAgICAgICAgIHdpbmRvdy5zZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaW5zdGFuY2UuZGVzdHJveSgpO1xuICAgICAgICAgICAgICAgICAgfSwgdHlwZWl0Q29uZmlnLmR1cmF0aW9uKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIGluc3RhbmNlLmRlc3Ryb3koKTtcbiAgICAgICAgICAgICAgdHlwZW9uZShpICsgMSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgIH0pLmdvKCk7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgICB0eXBlb25lKDApO1xuICAgIH0pO1xuICB9XG59XG5cbmZ1bmN0aW9uIGluaXRNZXRhKCkge1xuICBmdW5jdGlvbiBnZXRNZXRhKG1ldGFOYW1lKSB7XG4gICAgY29uc3QgbWV0YXMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcIm1ldGFcIik7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBtZXRhcy5sZW5ndGg7IGkrKykge1xuICAgICAgaWYgKG1ldGFzW2ldLmdldEF0dHJpYnV0ZShcIm5hbWVcIikgPT09IG1ldGFOYW1lKSB7XG4gICAgICAgIHJldHVybiBtZXRhc1tpXTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgY29uc3QgdGhlbWVDb2xvck1ldGEgPSBnZXRNZXRhKFwidGhlbWUtY29sb3JcIik7XG4gIGNvbnN0IG1ldGFDb2xvcnMgPSB7XG4gICAgbGlnaHQ6IFwiI2Y4ZjhmOFwiLFxuICAgIGRhcms6IFwiIzE2MWIyMlwiLFxuICB9O1xuICB3aW5kb3cuX21ldGFUaGVtZUNvbG9yT25Td2l0Y2hUaGVtZSA9ICgpID0+IHtcbiAgICB0aGVtZUNvbG9yTWV0YS5jb250ZW50ID0gbWV0YUNvbG9yc1tkb2N1bWVudC5ib2R5LmdldEF0dHJpYnV0ZShcInRoZW1lXCIpXTtcbiAgfTtcbiAgd2luZG93LnN3aXRjaFRoZW1lRXZlbnRTZXQuYWRkKHdpbmRvdy5fbWV0YVRoZW1lQ29sb3JPblN3aXRjaFRoZW1lKTtcbiAgd2luZG93Ll9tZXRhVGhlbWVDb2xvck9uU3dpdGNoVGhlbWUoKTtcbn1cblxuZnVuY3Rpb24gb25TY3JvbGwoKSB7XG4gIGNvbnN0IGJhY2tUb1RvcCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYmFjay10by10b3AtYnV0dG9uXCIpO1xuICBmdW5jdGlvbiBoYW5kbGVTY3JvbGxFdmVudCgpIHtcbiAgICB3aW5kb3cubmV3U2Nyb2xsVG9wID0gZ2V0U2Nyb2xsVG9wKCk7XG4gICAgaWYgKHdpbmRvdy5uZXdTY3JvbGxUb3AgPiAyMCkge1xuICAgICAgYmFja1RvVG9wLnN0eWxlLm9wYWNpdHkgPSBcIjFcIjtcbiAgICB9IGVsc2Uge1xuICAgICAgYmFja1RvVG9wLnN0eWxlLm9wYWNpdHkgPSBcIjBcIjtcbiAgICB9XG4gICAgZm9yIChjb25zdCBldmVudCBvZiB3aW5kb3cuc2Nyb2xsRXZlbnRTZXQpIGV2ZW50KCk7XG4gICAgd2luZG93Lm9sZFNjcm9sbFRvcCA9IHdpbmRvdy5uZXdTY3JvbGxUb3A7XG4gIH1cbiAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJzY3JvbGxcIiwgaGFuZGxlU2Nyb2xsRXZlbnQsIGZhbHNlKTtcbn1cblxuZnVuY3Rpb24gb25SZXNpemUoKSB7XG4gIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFxuICAgIFwicmVzaXplXCIsXG4gICAgKCkgPT4ge1xuICAgICAgaWYgKCF3aW5kb3cuX3Jlc2l6ZVRpbWVvdXQpIHtcbiAgICAgICAgd2luZG93Ll9yZXNpemVUaW1lb3V0ID0gd2luZG93LnNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgIHdpbmRvdy5fcmVzaXplVGltZW91dCA9IG51bGw7XG4gICAgICAgICAgZm9yIChjb25zdCBldmVudCBvZiB3aW5kb3cucmVzaXplRXZlbnRTZXQpIGV2ZW50KCk7XG4gICAgICAgICAgaW5pdFNlYXJjaCgpO1xuICAgICAgICB9LCAxMDApO1xuICAgICAgfVxuICAgIH0sXG4gICAgZmFsc2UsXG4gICk7XG59XG5cbmZ1bmN0aW9uIG9uQ2xpY2tNYXNrKCkge1xuICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1hc2tcIikuYWRkRXZlbnRMaXN0ZW5lcihcbiAgICBcImNsaWNrXCIsXG4gICAgKCkgPT4ge1xuICAgICAgZm9yIChjb25zdCBldmVudCBvZiB3aW5kb3cuY2xpY2tNYXNrRXZlbnRTZXQpIGV2ZW50KCk7XG4gICAgICBkb2N1bWVudC5ib2R5LmNsYXNzTGlzdC5yZW1vdmUoXCJibHVyXCIpO1xuICAgIH0sXG4gICAgZmFsc2UsXG4gICk7XG59XG5cbmZ1bmN0aW9uIGluaXRDb2RlYmxvY2tzKCkge1xuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLmNvZGUtYmxvY2tcIikuZm9yRWFjaCgoY29kZUJsb2NrKSA9PiB7XG4gICAgLy8gdGhlIHF1ZXJpZXMgYXJlIGd1YXJhbnRlZWQgdG8gYmUgc3VjY2Vzc2Z1bFxuICAgIGNvbnN0IHRpdGxlQmFyID0gY29kZUJsb2NrLnF1ZXJ5U2VsZWN0b3IoXG4gICAgICBcImRpdi5jb2RlLWJsb2NrLXRpdGxlLWJhclwiLFxuICAgICkgYXMgSFRNTERpdkVsZW1lbnQ7XG4gICAgY29uc3QgY2hyb21hID0gY29kZUJsb2NrLnF1ZXJ5U2VsZWN0b3IoXCJjb2RlLmNocm9tYVwiKSBhcyBIVE1MRWxlbWVudDtcbiAgICBjb25zdCBjb3B5Q29kZUJ1dHRvbiA9IGNvZGVCbG9jay5xdWVyeVNlbGVjdG9yKFxuICAgICAgXCJidXR0b24uY29weS1jb2RlLWJ1dHRvblwiLFxuICAgICkgYXMgSFRNTEJ1dHRvbkVsZW1lbnQ7XG4gICAgY29uc3QgY29weUljb24gPSBjb3B5Q29kZUJ1dHRvbi5xdWVyeVNlbGVjdG9yKFxuICAgICAgXCJzcGFuLmNvcHktaWNvblwiLFxuICAgICkgYXMgU1ZHRWxlbWVudDtcbiAgICBjb25zdCBjaGVja0ljb24gPSBjb3B5Q29kZUJ1dHRvbi5xdWVyeVNlbGVjdG9yKFxuICAgICAgXCJzcGFuLmNoZWNrLWljb25cIixcbiAgICApIGFzIFNWR0VsZW1lbnQ7XG4gICAgY29uc3Qgd3JhcENvZGVCdXR0b24gPSBjb2RlQmxvY2sucXVlcnlTZWxlY3RvcihcbiAgICAgIFwiYnV0dG9uLndyYXAtY29kZS1idXR0b25cIixcbiAgICApIGFzIEhUTUxCdXR0b25FbGVtZW50O1xuICAgIGNvbnN0IHRvZ2dsZUxpbmVOdW1iZXJzQnV0dG9uID0gY29kZUJsb2NrLnF1ZXJ5U2VsZWN0b3IoXG4gICAgICBcImJ1dHRvbi5saW5lLW51bWJlci1idXR0b25cIixcbiAgICApIGFzIEhUTUxCdXR0b25FbGVtZW50O1xuXG4gICAgY2hyb21hLnN0eWxlLm1heEhlaWdodCA9IGNocm9tYS5zY3JvbGxIZWlnaHQgKyAxMCArIFwicHhcIjtcblxuICAgIC8vIGhhbmRsZSBleHBhbmRpbmcgYW5kIGNvbGxhcHNpbmcgY29kZSBibG9ja3NcbiAgICB0aXRsZUJhci5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgY29kZUJsb2NrLmNsYXNzTGlzdC50b2dnbGUoXCJpcy1vcGVuXCIpO1xuICAgICAgY29kZUJsb2NrLmNsYXNzTGlzdC50b2dnbGUoXCJpcy1jbG9zZWRcIik7XG4gICAgfSk7XG5cbiAgICAvLyBoYW5kbGUgY29weWluZyBjb2RlIHRvIGNsaXBib2FyZFxuICAgIGNvcHlDb2RlQnV0dG9uPy5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgbmF2aWdhdG9yLmNsaXBib2FyZC53cml0ZVRleHQoY2hyb21hLnRleHRDb250ZW50KTtcbiAgICAgIC8vIHRvZ2dsZSBpY29uc1xuICAgICAgY29weUljb24uc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgICAgY2hlY2tJY29uLnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XG4gICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgY29weUljb24uc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcbiAgICAgICAgY2hlY2tJY29uLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICAgIH0sIDMwMDApO1xuICAgIH0pO1xuXG4gICAgLy8gaGFuZGxlIHdyYXBwaW5nIGxpbmVzIGluIGNvZGUgYmxvY2tzXG4gICAgd3JhcENvZGVCdXR0b24/LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICBjaHJvbWEuc3R5bGUubWF4SGVpZ2h0ID0gXCJmaXQtY29udGVudFwiO1xuICAgICAgY29kZUJsb2NrLmNsYXNzTGlzdC50b2dnbGUoXCJpcy13cmFwXCIpO1xuICAgICAgY2hyb21hLnN0eWxlLm1heEhlaWdodCA9IGNocm9tYS5zY3JvbGxIZWlnaHQgKyAxMCArIFwicHhcIjtcbiAgICB9KTtcblxuICAgIHRvZ2dsZUxpbmVOdW1iZXJzQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICBjb2RlQmxvY2suY2xhc3NMaXN0LnRvZ2dsZShcInNob3ctbGluZS1udW1iZXJzXCIpO1xuICAgIH0pO1xuXG4gICAgYWRkRXZlbnRMaXN0ZW5lcihcImJlZm9yZXByaW50XCIsIChfKSA9PiB7XG4gICAgICBpZiAoY29kZUJsb2NrLmNsYXNzTGlzdC5jb250YWlucyhcImlzLWNsb3NlZFwiKSkge1xuICAgICAgICB0aXRsZUJhci5jbGljaygpO1xuICAgICAgfVxuICAgICAgaWYgKCFjb2RlQmxvY2suY2xhc3NMaXN0LmNvbnRhaW5zKFwiaXMtd3JhcFwiKSkge1xuICAgICAgICB3cmFwQ29kZUJ1dHRvbi5jbGljaygpO1xuICAgICAgfVxuICAgIH0pO1xuICB9KTtcbn1cblxuZnVuY3Rpb24gaW5pdCgpIHtcbiAgd2luZG93LmlzRGFyayA9IGRvY3VtZW50LmJvZHkuZ2V0QXR0cmlidXRlKFwidGhlbWVcIikgIT09IFwibGlnaHRcIjtcbiAgd2luZG93Lm5ld1Njcm9sbFRvcCA9IGdldFNjcm9sbFRvcCgpO1xuICB3aW5kb3cub2xkU2Nyb2xsVG9wID0gd2luZG93Lm5ld1Njcm9sbFRvcDtcbiAgd2luZG93LnNjcm9sbEV2ZW50U2V0ID0gbmV3IFNldCgpO1xuICB3aW5kb3cucmVzaXplRXZlbnRTZXQgPSBuZXcgU2V0KCk7XG4gIHdpbmRvdy5jbGlja01hc2tFdmVudFNldCA9IG5ldyBTZXQoKTtcbiAgaWYgKHdpbmRvdy5vYmplY3RGaXRJbWFnZXMpIG9iamVjdEZpdEltYWdlcygpO1xuICBpbml0TWVudU1vYmlsZSgpO1xuICBpbml0U3dpdGNoVGhlbWUoKTtcbiAgaW5pdFNlbGVjdFRoZW1lKCk7XG4gIGluaXRNZXRhKCk7XG4gIGluaXRTZWFyY2goKTtcbiAgaW5pdENvZGVibG9ja3MoKTtcbiAgaW5pdERldGFpbHMoKTtcbiAgaW5pdExpZ2h0R2FsbGVyeSgpO1xuICBpbml0VGFibGUoKTtcbiAgaW5pdFR5cGVpdCgpO1xuICBpbml0TWFwYm94KCk7XG4gIGluaXRUb2MoKTtcbiAgb25TY3JvbGwoKTtcbiAgb25SZXNpemUoKTtcbiAgb25DbGlja01hc2soKTtcbn1cblxuaW5pdCgpO1xuIl0sCiAgIm1hcHBpbmdzIjogIm9FQUFBLElBQUFBLEVBQUFDLEVBQUEsQ0FBQUMsR0FBQUMsSUFBQSxDQUFBQSxFQUFPLFFBQVUsT0FBTyxZQ1d4QixJQUFNQyxFQUFZLElBR2xCLFNBQVNDLEVBQU9DLEVBQVEsQ0FDdEIsT0FBT0EsRUFDSixRQUFRLEtBQU0sT0FBTyxFQUNyQixRQUFRLEtBQU0sTUFBTSxFQUNwQixRQUFRLEtBQU0sTUFBTSxFQUNwQixRQUFRLEtBQU0sUUFBUSxFQUN0QixR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QUFLLGFBQWEsT0FBTyxJQUFNLFFBQ3hELE9BQU8sYUFBZWIsRUFBYSxFQUNuQyxPQUFPLGFBQWUsT0FBTyxhQUM3QixPQUFPLGVBQWlCLElBQUksSUFDNUIsT0FBTyxlQUFpQixJQUFJLElBQzVCLE9BQU8sa0JBQW9CLElBQUksSUFDM0IsT0FBTyxpQkFBaUIsZ0JBQWdCLEVBQzVDekksRUFBZSxFQUNmSyxFQUFnQixFQUNoQkksRUFBZ0IsRUFDaEJ1SCxHQUFTLEVBQ1RwSCxFQUFXLEVBQ1hnSSxHQUFlLEVBQ2YvRCxHQUFZLEVBQ1pHLEdBQWlCLEVBQ2pCQyxHQUFVLEVBQ1Z1QyxHQUFXLEVBQ1hiLEdBQVcsRUFDWHJCLEdBQVEsRUFDUmdELEdBQVMsRUFDVEksR0FBUyxFQUNUQyxHQUFZLENBQ2QsQ0FFQVcsR0FBSyIsCiAgIm5hbWVzIjogWyJyZXF1aXJlX3RhYmxlc29ydCIsICJfX2NvbW1vbkpTTWluIiwgImV4cG9ydHMiLCAibW9kdWxlIiwgIlRhYmxlc29ydCIsICJlc2NhcGUiLCAidW5zYWZlIiwgImZvckVhY2giLCAiZWxlbWVudHMiLCAiaGFuZGxlciIsICJpIiwgImdldFNjcm9sbFRvcCIsICJpbml0TWVudU1vYmlsZSIsICJtZW51VG9nZ2xlTW9iaWxlIiwgIm1lbnVNb2JpbGUiLCAic2V0Q29sb3JUaGVtZSIsICJ0aGVtZSIsICJpbml0U3dpdGNoVGhlbWUiLCAidGhlbWVTd2l0Y2giLCAiY3VycmVudFRoZW1lIiwgImV2ZW50IiwgImluaXRTZWxlY3RUaGVtZSIsICJ0aGVtZVNlbGVjdCIsICJqIiwgImluaXRTZWFyY2giLCAic2VhcmNoQ29uZmlnIiwgImlzTW9iaWxlIiwgIm1heFJlc3VsdExlbmd0aCIsICJzbmlwcGV0TGVuZ3RoIiwgImhpZ2hsaWdodFRhZyIsICJpc0Nhc2VTZW5zaXRpdmUiLCAibWluTWF0Y2hDaGFyTGVuZ3RoIiwgImZpbmRBbGxNYXRjaGVzIiwgImxvY2F0aW9uIiwgInRocmVzaG9sZCIsICJkaXN0YW5jZSIsICJpZ25vcmVMb2NhdGlvbiIsICJ1c2VFeHRlbmRlZFNlYXJjaCIsICJpZ25vcmVGaWVsZE5vcm0iLCAic3VmZml4IiwgImhlYWRlciIsICJzZWFyY2hJbnB1dCIsICJzZWFyY2hUb2dnbGUiLCAic2VhcmNoTG9hZGluZyIsICJzZWFyY2hDbGVhciIsICJhdXRvY29tcGxldGVKcyIsICJhbGdvbGlhSnMiLCAiZnVzZUpzIiwgImxvYWRTY3JpcHQiLCAiaW5pdEF1dG9zZWFyY2giLCAiZSIsICJhdXRvc2VhcmNoIiwgInF1ZXJ5IiwgImNhbGxiYWNrIiwgImZpbmlzaCIsICJyZXN1bHRzIiwgImhpdHMiLCAidXJpIiwgImRhdGUiLCAidGl0bGUiLCAiY29udGVudCIsICJlcnIiLCAic2VhcmNoIiwgIml0ZW0iLCAicmVmSW5kZXgiLCAibWF0Y2hlcyIsICJpbmRpY2VzIiwgInZhbHVlIiwgImtleSIsICJvZmZzZXQiLCAiaSIsICJzdWJzdHIiLCAidGFnIiwgInJlc3BvbnNlIiwgImRhdGEiLCAib3B0aW9ucyIsICJjb250ZXh0IiwgImVzY2FwZSIsICJzZWFyY2hUeXBlIiwgImljb24iLCAiaHJlZiIsICJfc3VnZ2VzdGlvbiIsICJfZGF0YXNldCIsICJfY29udGV4dCIsICJpZCIsICJ1cmwiLCAib25sb2FkIiwgImhlYWQiLCAic2NyaXB0IiwgImluaXREZXRhaWxzIiwgIiRkZXRhaWxzIiwgIiRzdW1tYXJ5IiwgImluaXRMaWdodEdhbGxlcnkiLCAiaW5pdFRhYmxlIiwgImZvckVhY2giLCAiJHRhYmxlIiwgIiR3cmFwcGVyIiwgIlRhYmxlc29ydCIsICJpbml0VG9jIiwgInRvY0NvcmUiLCAiaXNUb2NTdGF0aWMiLCAidG9jIiwgInRvY0xpbmtFbGVtZW50cyIsICJ0b2NMaUVsZW1lbnRzIiwgImhlYWRlckxpbmtFbGVtZW50cyIsICJoZWFkZXJJc0ZpeGVkIiwgImhlYWRlckhlaWdodCIsICJUT1BfU1BBQ0lORyIsICJtaW5Ub2NUb3AiLCAibWluU2Nyb2xsVG9wIiwgIm1heFRvY1RvcCIsICJtYXhTY3JvbGxUb3AiLCAiYWN0aXZlVG9jSW5kZXgiLCAiSU5ERVhfU1BBQ0lORyIsICJ0aGlzVG9wIiwgIm5leHRUb3AiLCAidG9jTGluayIsICJ0b2NMaSIsICJwYXJlbnQiLCAiaW5pdE1hcGJveCIsICIkbWFwYm94IiwgImxuZyIsICJsYXQiLCAiem9vbSIsICJsaWdodFN0eWxlIiwgImRhcmtTdHlsZSIsICJtYXJrZWQiLCAibmF2aWdhdGlvbiIsICJnZW9sb2NhdGUiLCAic2NhbGUiLCAiZnVsbHNjcmVlbiIsICJtYXBib3giLCAiaW5pdFR5cGVpdCIsICJ0eXBlaXRDb25maWciLCAic3BlZWQiLCAiY3Vyc29yU3BlZWQiLCAiY3Vyc29yQ2hhciIsICJncm91cCIsICJ0eXBlb25lIiwgImluc3RhbmNlIiwgImluaXRNZXRhIiwgImdldE1ldGEiLCAibWV0YU5hbWUiLCAibWV0YXMiLCAidGhlbWVDb2xvck1ldGEiLCAibWV0YUNvbG9ycyIsICJvblNjcm9sbCIsICJiYWNrVG9Ub3AiLCAiaGFuZGxlU2Nyb2xsRXZlbnQiLCAiZ2V0U2Nyb2xsVG9wIiwgIm9uUmVzaXplIiwgIm9uQ2xpY2tNYXNrIiwgImluaXRDb2RlYmxvY2tzIiwgImNvZGVCbG9jayIsICJ0aXRsZUJhciIsICJjaHJvbWEiLCAiY29weUNvZGVCdXR0b24iLCAiY29weUljb24iLCAiY2hlY2tJY29uIiwgIndyYXBDb2RlQnV0dG9uIiwgInRvZ2dsZUxpbmVOdW1iZXJzQnV0dG9uIiwgIl8iLCAiaW5pdCJdCn0K
