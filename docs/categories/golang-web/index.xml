<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>golang-web on zeroy&#39;s blog</title>
    <link>https://zeroy.site/categories/golang-web/</link>
    <description>Recent content in golang-web on zeroy&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 11 Feb 2022 16:31:25 +0800</lastBuildDate><atom:link href="https://zeroy.site/categories/golang-web/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Golang|Gin Web development for Beginners</title>
      <link>https://zeroy.site/articles/Golang-web1/</link>
      <pubDate>Fri, 11 Feb 2022 16:31:25 +0800</pubDate>
      
      <guid>https://zeroy.site/articles/Golang-web1/</guid>
      <description>自带的net/http库的使用 http库提供了HTTP服务的用户端和服务端的实现。
官方文档
Go语言基础之net/http | 李文周的博客 (liwenzhou.com)
示例代码
监听本地端口，在浏览器输出Hello World字符串。
func sayHello(w http.ResponseWriter,r *http.Request){ //ResponseWriter为服务端返回的内容 	fmt.Fprintln(w, &amp;#34;Hello World!&amp;#34;) } func main(){ http.HandleFunc(&amp;#34;/&amp;#34;,sayHello) http.ListenAndServe(&amp;#34;:8080&amp;#34;,nil) } Gin框架 简介 Gin 是一个用 Go (Golang) 编写的 HTTP web 框架。 它是一个类似于 martini 但拥有更好性能的 API 框架, 优于 httprouter，速度提高了近 40 倍。如果你需要极好的性能，使用 Gin 吧。
官方中文文档
Gin框架介绍及使用 | 李文周的博客 (liwenzhou.com)
特性
Gin v1 稳定的特性:  零分配路由。 仍然是最快的 http 路由器和框架。 完整的单元测试支持。 实战考验。 API 冻结，新版本的发布不会破坏你的代码。  框架初识 使用Gin框架返回一个json文件
func sayHello(c *gin.Context/*gin框架中的临时变量，便于后续响应请求*/){ c.</description>
    </item>
    
  </channel>
</rss>
