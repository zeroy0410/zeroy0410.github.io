<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Basic tools on zeroy&#39;s blog</title>
    <link>https://zeroy.site/categories/basic-tools/</link>
    <description>Recent content in Basic tools on zeroy&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 03 Feb 2022 16:00:45 +0800</lastBuildDate><atom:link href="https://zeroy.site/categories/basic-tools/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>正则表达式 For Beginner</title>
      <link>https://zeroy.site/articles/regular-expression/</link>
      <pubDate>Thu, 03 Feb 2022 16:00:45 +0800</pubDate>
      
      <guid>https://zeroy.site/articles/regular-expression/</guid>
      <description>简介 正则表达式（英语：Regular Expression，常简写为regex、regexp或RE），又称正则表示式、正则表示法、规则表达式、常规表示法，是计算机科学的一个概念。正则表达式使用单个字符串来描述、匹配一系列匹配某个句法规则的字符串。在很多文本编辑器里，正则表达式通常被用来检索、替换那些匹配某个模式的文本。
许多程序设计语言都支持利用正则表达式进行字符串操作。例如，在Perl中就内建了一个功能强大的正则表达式引擎。正则表达式这个概念最初是由Unix中的工具软件（例如sed和grep）普及开的。
语法总结 需要转义的特殊字符：
.[{()\^$|?*+ 就像在其它任何语言中那样，转义需要在符号前加上\。
匹配规则：
. - 除了新行外的任何字符 \d - 数字 (0-9) \D - 非数字 (0-9) \w - 单词字母 (a-z, A-Z, 0-9, _) \W - 非单词字母 \s - 空字符 (space, tab, newline) \S - 非空字符 (space, tab, newline) \b - 单词边界 \B - 非单词边界 ^ - 字符串开头（默认将一行看作一整个字符串） $ - 字符串结尾（默认将一行看作一整个字符串） [] - 匹配字符集 [^ ] - 匹配除了字符集外的字符 | - 或者 ( ) - Group Quantifiers: * - 0 or More + - 1 or More ?</description>
    </item>
    
  </channel>
</rss>
